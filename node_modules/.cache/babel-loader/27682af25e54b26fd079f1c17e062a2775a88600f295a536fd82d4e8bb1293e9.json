{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./TaskManager.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TaskManager=()=>{const[tasks,setTasks]=useState([]);const[filteredTasks,setFilteredTasks]=useState([]);const[isEditing,setIsEditing]=useState(false);const[currentTask,setCurrentTask]=useState({title:'',dueDate:'',description:'',status:'Pending'});const[searchTerm,setSearchTerm]=useState('');useEffect(()=>{const fetchTasks=async()=>{try{const response=await axios.get('http://localhost:5000/api/tasks');setTasks(response.data);setFilteredTasks(response.data);}catch(error){console.error('Failed to fetch tasks:',error);}};fetchTasks();},[]);const handleSearchChange=e=>{const value=e.target.value.toLowerCase();setSearchTerm(value);setFilteredTasks(tasks.filter(task=>task.title.toLowerCase().includes(value)));};const handleFormChange=e=>{const{name,value}=e.target;setCurrentTask(prev=>({...prev,[name]:value}));};const handleFormSubmit=async e=>{e.preventDefault();try{if(currentTask._id){// Edit task\nconst response=await axios.put(`http://localhost:5000/api/tasks/${currentTask._id}`,currentTask);setTasks(prev=>prev.map(task=>task._id===response.data._id?response.data:task));}else{// Add new task\nconst response=await axios.post('http://localhost:5000/api/tasks',currentTask);setTasks(prev=>[...prev,response.data]);}setFilteredTasks(tasks);setIsEditing(false);setCurrentTask({title:'',dueDate:'',description:'',status:'Pending'});}catch(error){console.error('Failed to save task:',error);}};const handleAddTask=()=>{setCurrentTask({title:'',dueDate:'',description:'',status:'Pending'});setIsEditing(true);};const handleTaskClick=task=>{setCurrentTask(task);setIsEditing(true);};const handleDeleteTask=async id=>{if(window.confirm('Are you sure you want to delete this task?')){try{await axios.delete(`http://localhost:5000/api/tasks/${id}`);setTasks(prev=>prev.filter(task=>task._id!==id));setFilteredTasks(prev=>prev.filter(task=>task._id!==id));}catch(error){console.error('Failed to delete task:',error);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"task-manager\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Manager\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search tasks by title...\",value:searchTerm,onChange:handleSearchChange,className:\"search-bar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddTask,className:\"add-task-button\",children:\"Add Task\"}),isEditing?/*#__PURE__*/_jsxs(\"div\",{className:\"task-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:currentTask._id?'Edit Task':'Add Task'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Title:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",value:currentTask.title,onChange:handleFormChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Due Date:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"dueDate\",value:currentTask.dueDate.slice(0,10)// Format date (only shows date part)\n,onChange:handleFormChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Description:\",/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",value:currentTask.description,onChange:handleFormChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Status:\",/*#__PURE__*/_jsxs(\"select\",{name:\"status\",value:currentTask.status,onChange:handleFormChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"In Progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Completed\",children:\"Completed\"})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setIsEditing(false),children:\"Cancel\"})]})]}):/*#__PURE__*/_jsx(_Fragment,{children:filteredTasks.length>0?/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Due Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredTasks.map(task=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{onClick:()=>handleTaskClick(task),children:task.title}),/*#__PURE__*/_jsxs(\"td\",{onClick:()=>handleTaskClick(task),children:[task.dueDate.slice(0,10),\" \"]}),/*#__PURE__*/_jsx(\"td\",{onClick:()=>handleTaskClick(task),children:task.description}),/*#__PURE__*/_jsx(\"td\",{onClick:()=>handleTaskClick(task),children:task.status}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteTask(task._id),children:\"Delete\"})})]},task._id))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No tasks found.\"})})]});};export default TaskManager;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TaskManager","tasks","setTasks","filteredTasks","setFilteredTasks","isEditing","setIsEditing","currentTask","setCurrentTask","title","dueDate","description","status","searchTerm","setSearchTerm","fetchTasks","response","get","data","error","console","handleSearchChange","e","value","target","toLowerCase","filter","task","includes","handleFormChange","name","prev","handleFormSubmit","preventDefault","_id","put","map","post","handleAddTask","handleTaskClick","handleDeleteTask","id","window","confirm","delete","className","children","type","placeholder","onChange","onClick","onSubmit","required","slice","length"],"sources":["C:/Users/Admin/crm-project/frontend/src/components/Tasks/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TaskManager.css';\r\nimport axios from 'axios';\r\n\r\nconst TaskManager = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filteredTasks, setFilteredTasks] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState({\r\n    title: '',\r\n    dueDate: '',\r\n    description: '',\r\n    status: 'Pending',\r\n  });\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/tasks');\r\n        setTasks(response.data);\r\n        setFilteredTasks(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleSearchChange = (e) => {\r\n    const value = e.target.value.toLowerCase();\r\n    setSearchTerm(value);\r\n    setFilteredTasks(\r\n      tasks.filter((task) => task.title.toLowerCase().includes(value))\r\n    );\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentTask((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (currentTask._id) {\r\n        // Edit task\r\n        const response = await axios.put(\r\n          `http://localhost:5000/api/tasks/${currentTask._id}`,\r\n          currentTask\r\n        );\r\n        setTasks((prev) =>\r\n          prev.map((task) => (task._id === response.data._id ? response.data : task))\r\n        );\r\n      } else {\r\n        // Add new task\r\n        const response = await axios.post('http://localhost:5000/api/tasks', currentTask);\r\n        setTasks((prev) => [...prev, response.data]);\r\n      }\r\n      setFilteredTasks(tasks);\r\n      setIsEditing(false);\r\n      setCurrentTask({ title: '', dueDate: '', description: '', status: 'Pending' });\r\n    } catch (error) {\r\n      console.error('Failed to save task:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    setCurrentTask({ title: '', dueDate: '', description: '', status: 'Pending' });\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleTaskClick = (task) => {\r\n    setCurrentTask(task);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleDeleteTask = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this task?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/tasks/${id}`);\r\n        setTasks((prev) => prev.filter((task) => task._id !== id));\r\n        setFilteredTasks((prev) => prev.filter((task) => task._id !== id));\r\n      } catch (error) {\r\n        console.error('Failed to delete task:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-manager\">\r\n      <h1>Task Manager</h1>\r\n\r\n      {/* Search Bar */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search tasks by title...\"\r\n        value={searchTerm}\r\n        onChange={handleSearchChange}\r\n        className=\"search-bar\"\r\n      />\r\n\r\n      <button onClick={handleAddTask} className=\"add-task-button\">Add Task</button>\r\n\r\n      {isEditing ? (\r\n        <div className=\"task-form\">\r\n          <h2>{currentTask._id ? 'Edit Task' : 'Add Task'}</h2>\r\n          <form onSubmit={handleFormSubmit}>\r\n            <label>\r\n              Title:\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={currentTask.title}\r\n                onChange={handleFormChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Due Date:\r\n              <input\r\n                type=\"date\"\r\n                name=\"dueDate\"\r\n                value={currentTask.dueDate.slice(0, 10)} // Format date (only shows date part)\r\n                onChange={handleFormChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Description:\r\n              <textarea\r\n                name=\"description\"\r\n                value={currentTask.description}\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Status:\r\n              <select\r\n                name=\"status\"\r\n                value={currentTask.status}\r\n                onChange={handleFormChange}\r\n                required\r\n              >\r\n                <option value=\"Pending\">Pending</option>\r\n                <option value=\"In Progress\">In Progress</option>\r\n                <option value=\"Completed\">Completed</option>\r\n              </select>\r\n            </label>\r\n            <button type=\"submit\">Save</button>\r\n            <button type=\"button\" onClick={() => setIsEditing(false)}>\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {filteredTasks.length > 0 ? (\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Title</th>\r\n                  <th>Due Date</th>\r\n                  <th>Description</th>\r\n                  <th>Status</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredTasks.map((task) => (\r\n                  <tr key={task._id}>\r\n                    <td onClick={() => handleTaskClick(task)}>{task.title}</td>\r\n                    <td onClick={() => handleTaskClick(task)}>\r\n                      {task.dueDate.slice(0, 10)} {/* Display only the date part */}\r\n                    </td>\r\n                    <td onClick={() => handleTaskClick(task)}>{task.description}</td>\r\n                    <td onClick={() => handleTaskClick(task)}>{task.status}</td>\r\n                    <td>\r\n                      <button onClick={() => handleDeleteTask(task._id)}>Delete</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No tasks found.</p>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
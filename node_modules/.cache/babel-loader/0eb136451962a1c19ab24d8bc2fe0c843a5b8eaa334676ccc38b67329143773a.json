{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\crm-project\\\\frontend\\\\src\\\\components\\\\LeadGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { fetchLeads } from '../api';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the necessary components for Chart.js v3+\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\nconst LeadGraph = () => {\n  _s();\n  const [graphData, setGraphData] = useState({});\n  useEffect(() => {\n    const getLeadData = async () => {\n      const response = await fetchLeads();\n      const leads = response.data;\n\n      // Count leads by status\n      const statusCounts = leads.reduce((acc, lead) => {\n        acc[lead.status] = (acc[lead.status] || 0) + 1;\n        return acc;\n      }, {});\n      setGraphData({\n        labels: Object.keys(statusCounts),\n        datasets: [{\n          label: 'Leads by Status',\n          data: Object.values(statusCounts),\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']\n        }]\n      });\n    };\n    getLeadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lead Status Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: graphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LeadGraph, \"eQwR0Vur0SbS0XgxDbT6Z2w0SY4=\");\n_c = LeadGraph;\nexport default LeadGraph;\nvar _c;\n$RefreshReg$(_c, \"LeadGraph\");","map":{"version":3,"names":["React","useEffect","useState","Bar","fetchLeads","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","LeadGraph","_s","graphData","setGraphData","getLeadData","response","leads","data","statusCounts","reduce","acc","lead","status","labels","Object","keys","datasets","label","values","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/crm-project/frontend/src/components/LeadGraph.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { fetchLeads } from '../api';\r\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Register the necessary components for Chart.js v3+\r\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\r\n\r\nconst LeadGraph = () => {\r\n  const [graphData, setGraphData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getLeadData = async () => {\r\n      const response = await fetchLeads();\r\n      const leads = response.data;\r\n\r\n      // Count leads by status\r\n      const statusCounts = leads.reduce((acc, lead) => {\r\n        acc[lead.status] = (acc[lead.status] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n\r\n      setGraphData({\r\n        labels: Object.keys(statusCounts),\r\n        datasets: [\r\n          {\r\n            label: 'Leads by Status',\r\n            data: Object.values(statusCounts),\r\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],\r\n          },\r\n        ],\r\n      });\r\n    };\r\n\r\n    getLeadData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Lead Status Distribution</h2>\r\n      <Bar data={graphData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeadGraph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;;AAE3G;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CAACR,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMI,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMmB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMjB,UAAU,CAAC,CAAC;MACnC,MAAMkB,KAAK,GAAGD,QAAQ,CAACE,IAAI;;MAE3B;MACA,MAAMC,YAAY,GAAGF,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;QAC/CD,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,GAAG,CAACF,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9C,OAAOF,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MAENP,YAAY,CAAC;QACXU,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACP,YAAY,CAAC;QACjCQ,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,iBAAiB;UACxBV,IAAI,EAAEO,MAAM,CAACI,MAAM,CAACV,YAAY,CAAC;UACjCW,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;QAC9D,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC;IAEDf,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC1B,OAAA,CAACX,GAAG;MAACoB,IAAI,EAAEL;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnCID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
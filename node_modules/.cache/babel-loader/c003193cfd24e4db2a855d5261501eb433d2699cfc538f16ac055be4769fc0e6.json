{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\crm-project\\\\frontend\\\\src\\\\components\\\\Tasks\\\\TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './TaskManager.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editTask, setEditTask] = useState(null);\n  const [taskTitle, setTaskTitle] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [contactLink, setContactLink] = useState('');\n\n  // Fetch tasks from API on component mount\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/tasks');\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Failed to fetch tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // Add or update task\n  const addOrUpdateTask = async e => {\n    e.preventDefault();\n    if (!taskTitle) return;\n    const task = {\n      title: taskTitle,\n      dueDate: dueDate || 'No due date',\n      contactLink: contactLink || 'No link'\n    };\n    try {\n      if (editTask) {\n        // Update task\n        const updatedTask = await axios.put(`http://localhost:5000/api/tasks/${editTask._id}`, task);\n        setTasks(prevTasks => prevTasks.map(t => t._id === editTask._id ? updatedTask.data : t));\n      } else {\n        // Add new task\n        const addedTask = await axios.post('http://localhost:5000/api/tasks', task);\n        setTasks(prevTasks => [...prevTasks, addedTask.data]);\n      }\n      closeModal();\n    } catch (error) {\n      console.error('Failed to save task:', error);\n    }\n  };\n\n  // Open modal to add or edit task\n  const openModal = (task = null) => {\n    setEditTask(task);\n    setTaskTitle(task ? task.title : '');\n    setDueDate(task ? task.dueDate === 'No due date' ? '' : task.dueDate : '');\n    setContactLink(task ? task.contactLink === 'No link' ? '' : task.contactLink : '');\n    setIsModalOpen(true);\n  };\n\n  // Close modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditTask(null);\n    setTaskTitle('');\n    setDueDate('');\n    setContactLink('');\n  };\n\n  // Delete task\n  const deleteTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/tasks/${taskId}`);\n      setTasks(prevTasks => prevTasks.filter(task => task._id !== taskId));\n    } catch (error) {\n      console.error('Failed to delete task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-task-button\",\n      onClick: () => openModal(),\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), \" - \", task.dueDate, \" (\", task.contactLink, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openModal(task),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No tasks added yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editTask ? 'Edit Task' : 'Add Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addOrUpdateTask,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Task Title\",\n            value: taskTitle,\n            onChange: e => setTaskTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"Due Date\",\n            value: dueDate,\n            onChange: e => setDueDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Link to Contact (optional)\",\n            value: contactLink,\n            onChange: e => setContactLink(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: editTask ? 'Update Task' : 'Save Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-button\",\n            onClick: closeModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"EiTgcalCyFez38pNvMOXMLwOAB4=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","isModalOpen","setIsModalOpen","editTask","setEditTask","taskTitle","setTaskTitle","dueDate","setDueDate","contactLink","setContactLink","fetchTasks","response","get","data","error","console","addOrUpdateTask","e","preventDefault","task","title","updatedTask","put","_id","prevTasks","map","t","addedTask","post","closeModal","openModal","deleteTask","taskId","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Admin/crm-project/frontend/src/components/Tasks/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './TaskManager.css';\r\n\r\nconst TaskManager = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editTask, setEditTask] = useState(null);\r\n  const [taskTitle, setTaskTitle] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const [contactLink, setContactLink] = useState('');\r\n\r\n  // Fetch tasks from API on component mount\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/tasks');\r\n        setTasks(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch tasks:', error);\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // Add or update task\r\n  const addOrUpdateTask = async (e) => {\r\n    e.preventDefault();\r\n    if (!taskTitle) return;\r\n\r\n    const task = {\r\n      title: taskTitle,\r\n      dueDate: dueDate || 'No due date',\r\n      contactLink: contactLink || 'No link',\r\n    };\r\n\r\n    try {\r\n      if (editTask) {\r\n        // Update task\r\n        const updatedTask = await axios.put(\r\n          `http://localhost:5000/api/tasks/${editTask._id}`,\r\n          task\r\n        );\r\n        setTasks((prevTasks) =>\r\n          prevTasks.map((t) => (t._id === editTask._id ? updatedTask.data : t))\r\n        );\r\n      } else {\r\n        // Add new task\r\n        const addedTask = await axios.post('http://localhost:5000/api/tasks', task);\r\n        setTasks((prevTasks) => [...prevTasks, addedTask.data]);\r\n      }\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error('Failed to save task:', error);\r\n    }\r\n  };\r\n\r\n  // Open modal to add or edit task\r\n  const openModal = (task = null) => {\r\n    setEditTask(task);\r\n    setTaskTitle(task ? task.title : '');\r\n    setDueDate(task ? (task.dueDate === 'No due date' ? '' : task.dueDate) : '');\r\n    setContactLink(task ? (task.contactLink === 'No link' ? '' : task.contactLink) : '');\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Close modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setEditTask(null);\r\n    setTaskTitle('');\r\n    setDueDate('');\r\n    setContactLink('');\r\n  };\r\n\r\n  // Delete task\r\n  const deleteTask = async (taskId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/tasks/${taskId}`);\r\n      setTasks((prevTasks) => prevTasks.filter((task) => task._id !== taskId));\r\n    } catch (error) {\r\n      console.error('Failed to delete task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-manager\">\r\n      <h1>Task Manager</h1>\r\n      <button className=\"add-task-button\" onClick={() => openModal()}>\r\n        Add Task\r\n      </button>\r\n\r\n      <ul className=\"task-list\">\r\n        {tasks.length > 0 ? (\r\n          tasks.map((task) => (\r\n            <li key={task._id}>\r\n              <div className=\"task-item\">\r\n                <div className=\"task-details\">\r\n                  <strong>{task.title}</strong> - {task.dueDate} ({task.contactLink})\r\n                </div>\r\n                <div className=\"task-actions\">\r\n                  <button onClick={() => openModal(task)}>Edit</button>\r\n                  <button onClick={() => deleteTask(task._id)}>Delete</button>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No tasks added yet</li>\r\n        )}\r\n      </ul>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>{editTask ? 'Edit Task' : 'Add Task'}</h2>\r\n            <form onSubmit={addOrUpdateTask}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Task Title\"\r\n                value={taskTitle}\r\n                onChange={(e) => setTaskTitle(e.target.value)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                placeholder=\"Due Date\"\r\n                value={dueDate}\r\n                onChange={(e) => setDueDate(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Link to Contact (optional)\"\r\n                value={contactLink}\r\n                onChange={(e) => setContactLink(e.target.value)}\r\n              />\r\n              <button type=\"submit\">{editTask ? 'Update Task' : 'Save Task'}</button>\r\n              <button type=\"button\" className=\"cancel-button\" onClick={closeModal}>\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
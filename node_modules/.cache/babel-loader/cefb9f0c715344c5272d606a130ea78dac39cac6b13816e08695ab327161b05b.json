{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\crm-project\\\\frontend\\\\src\\\\components\\\\Contacts\\\\ContactList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ContactList.css';\nimport EmailSummary from '../Email/EmailSummary';\nimport EmailList from '../Email/EmailList';\nimport EmailDetails from '../Email/EmailDetails';\nimport EmailForm from '../Email/EmailForm';\nimport Modal from './Modal';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null); // For email details\n  const [selectedEmailId, setSelectedEmailId] = useState(null); // For specific email details\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal state for contact form\n  const [isAddingNew, setIsAddingNew] = useState(false); // Distinguish between add/edit mode\n  const [activeMenu, setActiveMenu] = useState(null); // Tracks which contact's menu is open\n  const [emails, setEmails] = useState([]); // Emails of the selected contact\n\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/contacts');\n        setContacts(response.data);\n      } catch (error) {\n        console.error('Failed to fetch contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, []);\n  const handleOpenModal = (contact = null) => {\n    setSelectedContact(contact);\n    setIsAddingNew(!contact);\n    setIsModalOpen(true);\n    setActiveMenu(null);\n  };\n  const handleCloseModal = () => {\n    setSelectedContact(null);\n    setIsModalOpen(false);\n  };\n  const handleDeleteContact = async id => {\n    if (window.confirm('Are you sure you want to delete this contact?')) {\n      try {\n        await axios.delete(`http://localhost:5000/api/contacts/${id}`);\n        setContacts(prev => prev.filter(contact => contact._id !== id));\n      } catch (error) {\n        console.error('Failed to delete contact:', error);\n      }\n    }\n    setActiveMenu(null);\n  };\n  const handleFormSubmit = async formData => {\n    try {\n      if (isAddingNew) {\n        const response = await axios.post('http://localhost:5000/api/contacts', formData);\n        setContacts(prev => [...prev, response.data]);\n      } else {\n        const response = await axios.put(`http://localhost:5000/api/contacts/${selectedContact._id}`, formData);\n        setContacts(prev => prev.map(contact => contact._id === response.data._id ? response.data : contact));\n      }\n      handleCloseModal();\n    } catch (error) {\n      console.error('Failed to save contact:', error);\n    }\n  };\n  const toggleMenu = contactId => {\n    setActiveMenu(prev => prev === contactId ? null : contactId);\n  };\n  const handleContactClick = async contact => {\n    setSelectedContact(contact);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/emails/client/${contact._id}`);\n      setEmails(response.data);\n    } catch (error) {\n      console.error('Failed to fetch emails:', error);\n    }\n  };\n  const handleEmailClick = emailId => {\n    setSelectedEmailId(emailId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailSummary, {\n      emails: emails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleOpenModal(),\n      children: \"Add New Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), contacts.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => handleContactClick(contact),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dots\",\n                onClick: e => {\n                  e.stopPropagation();\n                  toggleMenu(contact._id);\n                },\n                children: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), activeMenu === contact._id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-menu\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleOpenModal(contact);\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDeleteContact(contact._id);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, contact._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No contacts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isAddingNew ? 'Add New Contact' : `Edit Contact: ${selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contact: selectedContact,\n        onSubmit: handleFormSubmit,\n        onCancel: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), selectedContact && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Email Details for \", selectedContact.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), selectedEmailId ? /*#__PURE__*/_jsxDEV(EmailDetails, {\n        emailId: selectedEmailId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(EmailForm, {\n          clientId: selectedContact._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EmailList, {\n          clientId: selectedContact._id,\n          onEmailClick: handleEmailClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactList, \"6R7pCmFbcYJNdl/jenI/WmCfhig=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useState","useEffect","EmailSummary","EmailList","EmailDetails","EmailForm","Modal","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactList","_s","contacts","setContacts","selectedContact","setSelectedContact","selectedEmailId","setSelectedEmailId","isModalOpen","setIsModalOpen","isAddingNew","setIsAddingNew","activeMenu","setActiveMenu","emails","setEmails","fetchContacts","response","get","data","error","console","handleOpenModal","contact","handleCloseModal","handleDeleteContact","id","window","confirm","delete","prev","filter","_id","handleFormSubmit","formData","post","put","map","toggleMenu","contactId","handleContactClick","handleEmailClick","emailId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","name","phone","email","notes","e","stopPropagation","onClose","ContactForm","onSubmit","onCancel","clientId","onEmailClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/crm-project/frontend/src/components/Contacts/ContactList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ContactList.css';\r\nimport EmailSummary from '../Email/EmailSummary';\r\nimport EmailList from '../Email/EmailList';\r\nimport EmailDetails from '../Email/EmailDetails';\r\nimport EmailForm from '../Email/EmailForm';\r\nimport Modal from './Modal';\r\nimport axios from 'axios';\r\n\r\nconst ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [selectedContact, setSelectedContact] = useState(null); // For email details\r\n  const [selectedEmailId, setSelectedEmailId] = useState(null); // For specific email details\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal state for contact form\r\n  const [isAddingNew, setIsAddingNew] = useState(false); // Distinguish between add/edit mode\r\n  const [activeMenu, setActiveMenu] = useState(null); // Tracks which contact's menu is open\r\n  const [emails, setEmails] = useState([]); // Emails of the selected contact\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/contacts');\r\n        setContacts(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch contacts:', error);\r\n      }\r\n    };\r\n\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  const handleOpenModal = (contact = null) => {\r\n    setSelectedContact(contact);\r\n    setIsAddingNew(!contact);\r\n    setIsModalOpen(true);\r\n    setActiveMenu(null);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedContact(null);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteContact = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this contact?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/contacts/${id}`);\r\n        setContacts((prev) => prev.filter((contact) => contact._id !== id));\r\n      } catch (error) {\r\n        console.error('Failed to delete contact:', error);\r\n      }\r\n    }\r\n    setActiveMenu(null);\r\n  };\r\n\r\n  const handleFormSubmit = async (formData) => {\r\n    try {\r\n      if (isAddingNew) {\r\n        const response = await axios.post('http://localhost:5000/api/contacts', formData);\r\n        setContacts((prev) => [...prev, response.data]);\r\n      } else {\r\n        const response = await axios.put(\r\n          `http://localhost:5000/api/contacts/${selectedContact._id}`,\r\n          formData\r\n        );\r\n        setContacts((prev) =>\r\n          prev.map((contact) => (contact._id === response.data._id ? response.data : contact))\r\n        );\r\n      }\r\n      handleCloseModal();\r\n    } catch (error) {\r\n      console.error('Failed to save contact:', error);\r\n    }\r\n  };\r\n\r\n  const toggleMenu = (contactId) => {\r\n    setActiveMenu((prev) => (prev === contactId ? null : contactId));\r\n  };\r\n\r\n  const handleContactClick = async (contact) => {\r\n    setSelectedContact(contact);\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/api/emails/client/${contact._id}`\r\n      );\r\n      setEmails(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch emails:', error);\r\n    }\r\n  };\r\n\r\n  const handleEmailClick = (emailId) => {\r\n    setSelectedEmailId(emailId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-list\">\r\n      <h1>Contact List</h1>\r\n\r\n      {/* Email Summary */}\r\n      <EmailSummary emails={emails} />\r\n\r\n      {/* Add Contact Button */}\r\n      <button onClick={() => handleOpenModal()}>Add New Contact</button>\r\n\r\n      {/* Contact List */}\r\n      {contacts.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Phone</th>\r\n              <th>Email</th>\r\n              <th>Notes</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) => (\r\n              <tr key={contact._id} onClick={() => handleContactClick(contact)}>\r\n                <td>{contact.name}</td>\r\n                <td>{contact.phone}</td>\r\n                <td>{contact.email}</td>\r\n                <td>{contact.notes}</td>\r\n                <td>\r\n                  <div className=\"dropdown\">\r\n                    <button className=\"dots\" onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      toggleMenu(contact._id);\r\n                    }}>\r\n                      ...\r\n                    </button>\r\n                    {activeMenu === contact._id && (\r\n                      <div className=\"dropdown-menu\">\r\n                        <button onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleOpenModal(contact);\r\n                        }}>Edit</button>\r\n                        <button onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleDeleteContact(contact._id);\r\n                        }}>Delete</button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No contacts found.</p>\r\n      )}\r\n\r\n      {/* Add/Edit Contact Modal */}\r\n      {isModalOpen && (\r\n        <Modal onClose={handleCloseModal}>\r\n          <h2>{isAddingNew ? 'Add New Contact' : `Edit Contact: ${selectedContact?.name}`}</h2>\r\n          <ContactForm\r\n            contact={selectedContact}\r\n            onSubmit={handleFormSubmit}\r\n            onCancel={handleCloseModal}\r\n          />\r\n        </Modal>\r\n      )}\r\n\r\n      {/* Email Form and Details */}\r\n      {selectedContact && (\r\n        <div className=\"email-section\">\r\n          <h2>Email Details for {selectedContact.name}</h2>\r\n          {selectedEmailId ? (\r\n            <EmailDetails emailId={selectedEmailId} />\r\n          ) : (\r\n            <>\r\n              <EmailForm clientId={selectedContact._id} />\r\n              <EmailList clientId={selectedContact._id} onEmailClick={handleEmailClick} />\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
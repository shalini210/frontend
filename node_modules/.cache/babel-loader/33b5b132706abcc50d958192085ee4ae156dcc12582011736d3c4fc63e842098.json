{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\crm-project\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\nimport { getContacts } from '../api/contactApi'; // API function to fetch contacts\nimport { getTasks } from '../api/taskApi'; // API function to fetch tasks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [totalContacts, setTotalContacts] = useState(0);\n  const [upcomingTasks, setUpcomingTasks] = useState([]);\n\n  // Fetch data when the component loads\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch contacts\n        const contacts = await getContacts();\n        setTotalContacts(contacts.length);\n\n        // Fetch tasks\n        const tasks = await getTasks();\n        const upcoming = tasks.filter(task => new Date(task.dueDate) > new Date() // Filter tasks due in the future\n        );\n        setUpcomingTasks(upcoming.slice(0, 5)); // Show only the next 5 tasks\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Your CRM Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: totalContacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upcoming Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), upcomingTasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: upcomingTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [task.title, \" - Due \", new Date(task.dueDate).toLocaleDateString()]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No upcoming tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"OXNtIC10KZQKFgWFxYjX/AukIfU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","getContacts","getTasks","jsxDEV","_jsxDEV","Dashboard","_s","totalContacts","setTotalContacts","upcomingTasks","setUpcomingTasks","fetchData","contacts","length","tasks","upcoming","filter","task","Date","dueDate","slice","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","title","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Admin/crm-project/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Dashboard.css';\r\nimport { getContacts } from '../api/contactApi'; // API function to fetch contacts\r\nimport { getTasks } from '../api/taskApi'; // API function to fetch tasks\r\n\r\nconst Dashboard = () => {\r\n  const [totalContacts, setTotalContacts] = useState(0);\r\n  const [upcomingTasks, setUpcomingTasks] = useState([]);\r\n\r\n  // Fetch data when the component loads\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch contacts\r\n        const contacts = await getContacts();\r\n        setTotalContacts(contacts.length);\r\n\r\n        // Fetch tasks\r\n        const tasks = await getTasks();\r\n        const upcoming = tasks.filter(\r\n          (task) => new Date(task.dueDate) > new Date() // Filter tasks due in the future\r\n        );\r\n        setUpcomingTasks(upcoming.slice(0, 5)); // Show only the next 5 tasks\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Welcome to Your CRM Dashboard</h1>\r\n      <div className=\"stats\">\r\n        <div className=\"stat\">\r\n          <h2>Total Contacts</h2>\r\n          <p>{totalContacts}</p>\r\n        </div>\r\n        <div className=\"stat\">\r\n          <h2>Upcoming Tasks</h2>\r\n          {upcomingTasks.length > 0 ? (\r\n            <ul>\r\n              {upcomingTasks.map((task, index) => (\r\n                <li key={index}>\r\n                  {task.title} - Due {new Date(task.dueDate).toLocaleDateString()}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No upcoming tasks</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,SAASC,WAAW,QAAQ,mBAAmB,CAAC,CAAC;AACjD,SAASC,QAAQ,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMX,WAAW,CAAC,CAAC;QACpCO,gBAAgB,CAACI,QAAQ,CAACC,MAAM,CAAC;;QAEjC;QACA,MAAMC,KAAK,GAAG,MAAMZ,QAAQ,CAAC,CAAC;QAC9B,MAAMa,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAC1BC,IAAI,IAAK,IAAIC,IAAI,CAACD,IAAI,CAACE,OAAO,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC,CAAC;QAChD,CAAC;QACDR,gBAAgB,CAACK,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDV,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpB,OAAA;MAAAoB,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCxB,OAAA;MAAKmB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBpB,OAAA;QAAKmB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBpB,OAAA;UAAAoB,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBxB,OAAA;UAAAoB,QAAA,EAAIjB;QAAa;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACNxB,OAAA;QAAKmB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBpB,OAAA;UAAAoB,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACtBnB,aAAa,CAACI,MAAM,GAAG,CAAC,gBACvBT,OAAA;UAAAoB,QAAA,EACGf,aAAa,CAACoB,GAAG,CAAC,CAACZ,IAAI,EAAEa,KAAK,kBAC7B1B,OAAA;YAAAoB,QAAA,GACGP,IAAI,CAACc,KAAK,EAAC,SAAO,EAAC,IAAIb,IAAI,CAACD,IAAI,CAACE,OAAO,CAAC,CAACa,kBAAkB,CAAC,CAAC;UAAA,GADxDF,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,gBAELxB,OAAA;UAAAoB,QAAA,EAAG;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACxB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAnDID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAqDf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
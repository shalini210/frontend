{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Dashboard.css';import{getContacts}from'../api/contactApi';import{getTasks}from'../api/taskApi';import{Bar,Pie}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,ArcElement,Title,Tooltip,Legend}from'chart.js';// Register chart.js components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,ArcElement,Title,Tooltip,Legend);const Dashboard=()=>{const[totalContacts,setTotalContacts]=useState(0);const[upcomingTasks,setUpcomingTasks]=useState([]);const[leadCount,setLeadCount]=useState(0);const[contactCount,setContactCount]=useState(0);const[taskStatusCounts,setTaskStatusCounts]=useState({pending:0,inProgress:0,completed:0});useEffect(()=>{const fetchData=async()=>{try{const contacts=await getContacts();setTotalContacts(contacts.length);const leads=contacts.filter(contact=>contact.type==='lead');const contactsCount=contacts.filter(contact=>contact.type==='contact');setLeadCount(leads.length);setContactCount(contactsCount.length);const tasks=await getTasks();const upcoming=tasks.filter(task=>new Date(task.dueDate)>new Date());setUpcomingTasks(upcoming.slice(0,5));const statusCounts=tasks.reduce((acc,task)=>{if(task.status==='Pending')acc.pending++;else if(task.status==='In Progress')acc.inProgress++;else if(task.status==='Completed')acc.completed++;return acc;},{pending:0,inProgress:0,completed:0});setTaskStatusCounts(statusCounts);}catch(error){console.error('Error fetching data:',error);}};fetchData();},[]);const leadContactChartData={labels:['Leads','Contacts'],datasets:[{label:'Leads vs Contacts',data:[leadCount,contactCount],backgroundColor:['#4CAF50','#FF5722'],borderColor:['#388E3C','#D32F2F'],borderWidth:1}]};const taskStatusChartData={labels:['Pending','In Progress','Completed'],datasets:[{label:'Task Status',data:[taskStatusCounts.pending,taskStatusCounts.inProgress,taskStatusCounts.completed],backgroundColor:['#FF9800','#2196F3','#4CAF50'],borderColor:['#F57C00','#1976D2','#388E3C'],borderWidth:1}]};const leadContactChartOptions={responsive:true,maintainAspectRatio:true,plugins:{title:{display:true,text:`Leads (${leadCount}) vs Contacts (${contactCount})`},legend:{display:false}},scales:{x:{ticks:{display:true}},y:{ticks:{display:false// Hide y-axis ticks\n},grid:{display:false// Hide y-axis gridlines\n}}}};const taskStatusChartOptions={responsive:true,maintainAspectRatio:true,plugins:{title:{display:true,text:'Task Status Distribution'},legend:{position:'right'}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to Your CRM Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Total Contacts\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Leads: \",leadCount]}),\"  \",/*#__PURE__*/_jsxs(\"p\",{children:[\"Contacts: \",contactCount]}),\"  \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upcoming Tasks\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Pending: \",taskStatusCounts.pending]}),\"  \",/*#__PURE__*/_jsxs(\"p\",{children:[\"In Progress: \",taskStatusCounts.inProgress]}),\"  \",/*#__PURE__*/_jsxs(\"p\",{children:[\"Completed: \",taskStatusCounts.completed]}),\"  \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts\",style:{display:'flex',justifyContent:'space-around',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",style:{width:'40%'},children:/*#__PURE__*/_jsx(Bar,{data:leadContactChartData,options:leadContactChartOptions})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",style:{width:'35%'},children:/*#__PURE__*/_jsx(Pie,{data:taskStatusChartData,options:taskStatusChartOptions})})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","getContacts","getTasks","Bar","Pie","Chart","ChartJS","CategoryScale","LinearScale","BarElement","ArcElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","Dashboard","totalContacts","setTotalContacts","upcomingTasks","setUpcomingTasks","leadCount","setLeadCount","contactCount","setContactCount","taskStatusCounts","setTaskStatusCounts","pending","inProgress","completed","fetchData","contacts","length","leads","filter","contact","type","contactsCount","tasks","upcoming","task","Date","dueDate","slice","statusCounts","reduce","acc","status","error","console","leadContactChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","taskStatusChartData","leadContactChartOptions","responsive","maintainAspectRatio","plugins","title","display","text","legend","scales","x","ticks","y","grid","taskStatusChartOptions","position","className","children","style","justifyContent","alignItems","width","options"],"sources":["C:/Users/Admin/crm-project/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Dashboard.css';\r\nimport { getContacts } from '../api/contactApi';\r\nimport { getTasks } from '../api/taskApi';\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const [totalContacts, setTotalContacts] = useState(0);\r\n  const [upcomingTasks, setUpcomingTasks] = useState([]);\r\n  const [leadCount, setLeadCount] = useState(0);\r\n  const [contactCount, setContactCount] = useState(0);\r\n  const [taskStatusCounts, setTaskStatusCounts] = useState({ pending: 0, inProgress: 0, completed: 0 });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const contacts = await getContacts();\r\n        setTotalContacts(contacts.length);\r\n\r\n        const leads = contacts.filter(contact => contact.type === 'lead');\r\n        const contactsCount = contacts.filter(contact => contact.type === 'contact');\r\n        setLeadCount(leads.length);\r\n        setContactCount(contactsCount.length);\r\n\r\n        const tasks = await getTasks();\r\n        const upcoming = tasks.filter(\r\n          (task) => new Date(task.dueDate) > new Date()\r\n        );\r\n        setUpcomingTasks(upcoming.slice(0, 5));\r\n\r\n        const statusCounts = tasks.reduce(\r\n          (acc, task) => {\r\n            if (task.status === 'Pending') acc.pending++;\r\n            else if (task.status === 'In Progress') acc.inProgress++;\r\n            else if (task.status === 'Completed') acc.completed++;\r\n            return acc;\r\n          },\r\n          { pending: 0, inProgress: 0, completed: 0 }\r\n        );\r\n        setTaskStatusCounts(statusCounts);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const leadContactChartData = {\r\n    labels: ['Leads', 'Contacts'],\r\n    datasets: [\r\n      {\r\n        label: 'Leads vs Contacts',\r\n        data: [leadCount, contactCount],\r\n        backgroundColor: ['#4CAF50', '#FF5722'],\r\n        borderColor: ['#388E3C', '#D32F2F'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const taskStatusChartData = {\r\n    labels: ['Pending', 'In Progress', 'Completed'],\r\n    datasets: [\r\n      {\r\n        label: 'Task Status',\r\n        data: [taskStatusCounts.pending, taskStatusCounts.inProgress, taskStatusCounts.completed],\r\n        backgroundColor: ['#FF9800', '#2196F3', '#4CAF50'],\r\n        borderColor: ['#F57C00', '#1976D2', '#388E3C'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const leadContactChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: `Leads (${leadCount}) vs Contacts (${contactCount})`,\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          display: true,\r\n        },\r\n      },\r\n      y: {\r\n        ticks: {\r\n          display: false, // Hide y-axis ticks\r\n        },\r\n        grid: {\r\n          display: false, // Hide y-axis gridlines\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const taskStatusChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: 'Task Status Distribution',\r\n      },\r\n      legend: {\r\n        position: 'right',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Welcome to Your CRM Dashboard</h1>\r\n      <div className=\"stats\">\r\n        <div className=\"stat\">\r\n          <h2>Total Contacts</h2>\r\n          <p>Leads: {leadCount}</p>  {/* Displaying Leads count */}\r\n          <p>Contacts: {contactCount}</p>  {/* Displaying Contacts count */}\r\n        </div>\r\n        <div className=\"stat\">\r\n          <h2>Upcoming Tasks</h2>\r\n          <p>Pending: {taskStatusCounts.pending}</p>  {/* Displaying Pending task count */}\r\n          <p>In Progress: {taskStatusCounts.inProgress}</p>  {/* Displaying In Progress task count */}\r\n          <p>Completed: {taskStatusCounts.completed}</p>  {/* Displaying Completed task count */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"charts\" style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center' }}>\r\n        <div className=\"chart-container\" style={{ width: '40%' }}>\r\n          <Bar data={leadContactChartData} options={leadContactChartOptions} />\r\n        </div>\r\n\r\n        <div className=\"chart-container\" style={{ width: '35%' }}>\r\n          <Pie data={taskStatusChartData} options={taskStatusChartOptions} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
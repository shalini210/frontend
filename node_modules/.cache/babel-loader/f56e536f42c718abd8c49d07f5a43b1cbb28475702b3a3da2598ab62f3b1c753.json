{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\crm-project\\\\frontend\\\\src\\\\components\\\\Contacts\\\\ContactList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ContactList.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [isEditingContact, setIsEditingContact] = useState(false);\n  const [isEditingTask, setIsEditingTask] = useState(null); // Track task being edited\n  const [contactForm, setContactForm] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    notes: ''\n  });\n  const [taskForm, setTaskForm] = useState({\n    title: '',\n    dueDate: '',\n    description: '',\n    status: ''\n  });\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/contacts');\n        setContacts(response.data);\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, []);\n  const fetchTasksForContact = async contactId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/contacts/${contactId}/tasks`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const handleViewContact = contact => {\n    setSelectedContact(contact);\n    setContactForm(contact);\n    fetchTasksForContact(contact._id);\n    setShowPopup(true);\n  };\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setSelectedContact(null);\n    setTasks([]);\n    setIsEditingContact(false);\n    setIsEditingTask(null);\n  };\n  const handleContactFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setContactForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleTaskFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTaskForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSaveContact = async () => {\n    try {\n      if (selectedContact) {\n        // Update existing contact\n        const response = await axios.put(`http://localhost:5000/api/contacts/${selectedContact._id}`, contactForm);\n        setContacts(prev => prev.map(contact => contact._id === selectedContact._id ? response.data : contact));\n      } else {\n        // Add new contact\n        const response = await axios.post('http://localhost:5000/api/contacts', contactForm);\n        setContacts(prev => [...prev, response.data]);\n      }\n      handleClosePopup();\n    } catch (error) {\n      console.error('Error saving contact:', error);\n    }\n  };\n  const handleSaveTask = async () => {\n    try {\n      if (isEditingTask) {\n        // Update existing task\n        const response = await axios.put(`http://localhost:5000/api/tasks/${isEditingTask}`, taskForm);\n        setTasks(prev => prev.map(task => task._id === isEditingTask ? response.data : task));\n      } else {\n        // Add new task\n        const response = await axios.post(`http://localhost:5000/api/contacts/${selectedContact._id}/tasks`, taskForm);\n        setTasks(prev => [...prev, response.data]);\n      }\n      setIsEditingTask(null);\n      setTaskForm({\n        title: '',\n        dueDate: '',\n        description: '',\n        status: ''\n      });\n    } catch (error) {\n      console.error('Error saving task:', error);\n    }\n  };\n  const handleEditTask = task => {\n    setIsEditingTask(task._id);\n    setTaskForm(task);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setSelectedContact(null);\n        setContactForm({\n          name: '',\n          phone: '',\n          email: '',\n          notes: ''\n        });\n        setShowPopup(true);\n      },\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-table\",\n      children: contacts.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: contact.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: contact.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleViewContact(contact),\n                children: \"View/Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)]\n          }, contact._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No contacts available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: handleClosePopup,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedContact ? 'Edit Contact' : 'Add Contact'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: contactForm.name,\n              onChange: handleContactFormChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Phone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              value: contactForm.phone,\n              onChange: handleContactFormChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: contactForm.email,\n              onChange: handleContactFormChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Notes:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"notes\",\n              value: contactForm.notes,\n              onChange: handleContactFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSaveContact,\n            children: \"Save Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), selectedContact && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditTask(task),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 23\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tasks available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: isEditingTask ? 'Edit Task' : 'Add Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"title\",\n                value: taskForm.title,\n                onChange: handleTaskFormChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Due Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"dueDate\",\n                value: taskForm.dueDate,\n                onChange: handleTaskFormChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"description\",\n                value: taskForm.description,\n                onChange: handleTaskFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"status\",\n                value: taskForm.status,\n                onChange: handleTaskFormChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"In Progress\",\n                  children: \"In Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Completed\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleSaveTask,\n              children: isEditingTask ? 'Update Task' : 'Add Task'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactList, \"1qrB2Ktx+MpXDc3rE3nSeFT57nc=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactList","_s","contacts","setContacts","selectedContact","setSelectedContact","tasks","setTasks","showPopup","setShowPopup","isEditingContact","setIsEditingContact","isEditingTask","setIsEditingTask","contactForm","setContactForm","name","phone","email","notes","taskForm","setTaskForm","title","dueDate","description","status","fetchContacts","response","get","data","error","console","fetchTasksForContact","contactId","handleViewContact","contact","_id","handleClosePopup","handleContactFormChange","e","value","target","prev","handleTaskFormChange","handleSaveContact","put","map","post","handleSaveTask","task","handleEditTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Admin/crm-project/frontend/src/components/Contacts/ContactList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ContactList.css';\r\nimport axios from 'axios';\r\n\r\nconst ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [isEditingContact, setIsEditingContact] = useState(false);\r\n  const [isEditingTask, setIsEditingTask] = useState(null); // Track task being edited\r\n  const [contactForm, setContactForm] = useState({\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    notes: '',\r\n  });\r\n  const [taskForm, setTaskForm] = useState({\r\n    title: '',\r\n    dueDate: '',\r\n    description: '',\r\n    status: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/contacts');\r\n        setContacts(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching contacts:', error);\r\n      }\r\n    };\r\n\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  const fetchTasksForContact = async (contactId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/contacts/${contactId}/tasks`);\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  const handleViewContact = (contact) => {\r\n    setSelectedContact(contact);\r\n    setContactForm(contact);\r\n    fetchTasksForContact(contact._id);\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setShowPopup(false);\r\n    setSelectedContact(null);\r\n    setTasks([]);\r\n    setIsEditingContact(false);\r\n    setIsEditingTask(null);\r\n  };\r\n\r\n  const handleContactFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setContactForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleTaskFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTaskForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSaveContact = async () => {\r\n    try {\r\n      if (selectedContact) {\r\n        // Update existing contact\r\n        const response = await axios.put(\r\n          `http://localhost:5000/api/contacts/${selectedContact._id}`,\r\n          contactForm\r\n        );\r\n        setContacts((prev) =>\r\n          prev.map((contact) =>\r\n            contact._id === selectedContact._id ? response.data : contact\r\n          )\r\n        );\r\n      } else {\r\n        // Add new contact\r\n        const response = await axios.post('http://localhost:5000/api/contacts', contactForm);\r\n        setContacts((prev) => [...prev, response.data]);\r\n      }\r\n      handleClosePopup();\r\n    } catch (error) {\r\n      console.error('Error saving contact:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveTask = async () => {\r\n    try {\r\n      if (isEditingTask) {\r\n        // Update existing task\r\n        const response = await axios.put(\r\n          `http://localhost:5000/api/tasks/${isEditingTask}`,\r\n          taskForm\r\n        );\r\n        setTasks((prev) =>\r\n          prev.map((task) => (task._id === isEditingTask ? response.data : task))\r\n        );\r\n      } else {\r\n        // Add new task\r\n        const response = await axios.post(\r\n          `http://localhost:5000/api/contacts/${selectedContact._id}/tasks`,\r\n          taskForm\r\n        );\r\n        setTasks((prev) => [...prev, response.data]);\r\n      }\r\n      setIsEditingTask(null);\r\n      setTaskForm({ title: '', dueDate: '', description: '', status: '' });\r\n    } catch (error) {\r\n      console.error('Error saving task:', error);\r\n    }\r\n  };\r\n\r\n  const handleEditTask = (task) => {\r\n    setIsEditingTask(task._id);\r\n    setTaskForm(task);\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-list\">\r\n      <h1>Contact List</h1>\r\n      <button\r\n        onClick={() => {\r\n          setSelectedContact(null);\r\n          setContactForm({ name: '', phone: '', email: '', notes: '' });\r\n          setShowPopup(true);\r\n        }}\r\n      >\r\n        Add Contact\r\n      </button>\r\n\r\n      <div className=\"contact-table\">\r\n        {contacts.length > 0 ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Phone</th>\r\n                <th>Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {contacts.map((contact) => (\r\n                <tr key={contact._id}>\r\n                  <td>{contact.name}</td>\r\n                  <td>{contact.phone}</td>\r\n                  <td>{contact.email}</td>\r\n                  <td>\r\n                    <button onClick={() => handleViewContact(contact)}>View/Edit</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>No contacts available.</p>\r\n        )}\r\n      </div>\r\n\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <button className=\"close-button\" onClick={handleClosePopup}>\r\n              &times;\r\n            </button>\r\n            <h2>{selectedContact ? 'Edit Contact' : 'Add Contact'}</h2>\r\n            <form>\r\n              <label>\r\n                Name:\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={contactForm.name}\r\n                  onChange={handleContactFormChange}\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Phone:\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  value={contactForm.phone}\r\n                  onChange={handleContactFormChange}\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Email:\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={contactForm.email}\r\n                  onChange={handleContactFormChange}\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Notes:\r\n                <textarea\r\n                  name=\"notes\"\r\n                  value={contactForm.notes}\r\n                  onChange={handleContactFormChange}\r\n                />\r\n              </label>\r\n              <button type=\"button\" onClick={handleSaveContact}>\r\n                Save Contact\r\n              </button>\r\n            </form>\r\n\r\n            {selectedContact && (\r\n              <>\r\n                <h2>Tasks</h2>\r\n                {tasks.length > 0 ? (\r\n                  tasks.map((task) => (\r\n                    <div key={task._id} className=\"task-item\">\r\n                      <p><strong>{task.title}</strong></p>\r\n                      <button onClick={() => handleEditTask(task)}>Edit</button>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>No tasks available.</p>\r\n                )}\r\n\r\n                <h3>{isEditingTask ? 'Edit Task' : 'Add Task'}</h3>\r\n                <form>\r\n                  <label>\r\n                    Title:\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      value={taskForm.title}\r\n                      onChange={handleTaskFormChange}\r\n                      required\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    Due Date:\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"dueDate\"\r\n                      value={taskForm.dueDate}\r\n                      onChange={handleTaskFormChange}\r\n                      required\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    Description:\r\n                    <textarea\r\n                      name=\"description\"\r\n                      value={taskForm.description}\r\n                      onChange={handleTaskFormChange}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    Status:\r\n                    <select\r\n                      name=\"status\"\r\n                      value={taskForm.status}\r\n                      onChange={handleTaskFormChange}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select Status</option>\r\n                      <option value=\"Pending\">Pending</option>\r\n                      <option value=\"In Progress\">In Progress</option>\r\n                      <option value=\"Completed\">Completed</option>\r\n                    </select>\r\n                  </label>\r\n                  <button type=\"button\" onClick={handleSaveTask}>\r\n                    {isEditingTask ? 'Update Task' : 'Add Task'}\r\n                  </button>\r\n                </form>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
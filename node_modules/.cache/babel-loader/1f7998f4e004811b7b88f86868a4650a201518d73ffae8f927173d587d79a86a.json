{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\crm-project\\\\frontend\\\\src\\\\components\\\\Contacts\\\\ContactList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ContactList.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentContact, setCurrentContact] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    notes: '',\n    tasks: [] // Include tasks array in contact\n  });\n  const [taskModalOpen, setTaskModalOpen] = useState(false); // To toggle task modal\n  const [currentTask, setCurrentTask] = useState({\n    title: '',\n    dueDate: '',\n    description: '',\n    status: ''\n  });\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/contacts');\n        setContacts(response.data);\n      } catch (error) {\n        console.error('Failed to fetch contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, []);\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentContact(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleContactSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (currentContact._id) {\n        const response = await axios.put(`http://localhost:5000/api/contacts/${currentContact._id}`, currentContact);\n        setContacts(prev => prev.map(contact => contact._id === response.data._id ? response.data : contact));\n      } else {\n        const response = await axios.post('http://localhost:5000/api/contacts', currentContact);\n        setContacts(prev => [...prev, response.data]);\n      }\n      setIsEditing(false);\n      setCurrentContact({\n        name: '',\n        phone: '',\n        email: '',\n        notes: '',\n        tasks: []\n      });\n    } catch (error) {\n      console.error('Failed to save contact:', error);\n    }\n  };\n  const handleAddContact = () => {\n    setCurrentContact({\n      name: '',\n      phone: '',\n      email: '',\n      notes: '',\n      tasks: []\n    });\n    setIsEditing(true);\n  };\n  const handleContactClick = contact => {\n    setCurrentContact(contact);\n    setIsEditing(true);\n  };\n  const handleDeleteContact = async id => {\n    if (window.confirm('Are you sure you want to delete this contact?')) {\n      try {\n        await axios.delete(`http://localhost:5000/api/contacts/${id}`);\n        setContacts(prev => prev.filter(contact => contact._id !== id));\n      } catch (error) {\n        console.error('Failed to delete contact:', error);\n      }\n    }\n  };\n\n  // Handle adding a new task to the contact\n  const handleAddTask = () => {\n    setTaskModalOpen(true);\n    setCurrentTask({\n      title: '',\n      dueDate: '',\n      description: '',\n      status: ''\n    });\n  };\n\n  // Handle changes in the task form\n  const handleTaskChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentTask(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle saving the new task\n  const handleTaskSubmit = async e => {\n    e.preventDefault();\n    try {\n      const newTask = {\n        ...currentTask,\n        contactId: currentContact._id // Link task to current contact\n      };\n      const response = await axios.post('http://localhost:5000/api/tasks', newTask);\n      setCurrentContact(prev => ({\n        ...prev,\n        tasks: [...prev.tasks, response.data]\n      }));\n      setTaskModalOpen(false); // Close modal after saving task\n      setCurrentTask({\n        title: '',\n        dueDate: '',\n        description: '',\n        status: ''\n      });\n    } catch (error) {\n      console.error('Failed to add task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddContact,\n      className: \"add-contact-button\",\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentContact._id ? 'Edit Contact' : 'Add Contact'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleContactSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: currentContact.name,\n            onChange: handleFormChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Phone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: currentContact.phone,\n            onChange: handleFormChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: currentContact.email,\n            onChange: handleFormChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Notes:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"notes\",\n            value: currentContact.notes,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setIsEditing(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: contacts.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleContactClick(contact),\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleContactClick(contact),\n              children: contact.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleContactClick(contact),\n              children: contact.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleContactClick(contact),\n              children: contact.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteContact(contact._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddTask,\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this)]\n          }, contact._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No contacts found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), taskModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleTaskSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              value: currentTask.title,\n              onChange: handleTaskChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Due Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"dueDate\",\n              value: currentTask.dueDate || '',\n              onChange: handleTaskChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentTask.description,\n              onChange: handleTaskChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"status\",\n              value: currentTask.status,\n              onChange: handleTaskChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"In Progress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setTaskModalOpen(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Tasks for \", currentContact.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: currentContact.tasks.length > 0 ? currentContact.tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: task.dueDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 23\n              }, this)]\n            }, task._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No tasks added.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactList, \"TwEjABKte1CegCBJkxJgny6nLwc=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactList","_s","contacts","setContacts","isEditing","setIsEditing","currentContact","setCurrentContact","name","phone","email","notes","tasks","taskModalOpen","setTaskModalOpen","currentTask","setCurrentTask","title","dueDate","description","status","fetchContacts","response","get","data","error","console","handleFormChange","e","value","target","prev","handleContactSubmit","preventDefault","_id","put","map","contact","post","handleAddContact","handleContactClick","handleDeleteContact","id","window","confirm","delete","filter","handleAddTask","handleTaskChange","handleTaskSubmit","newTask","contactId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","required","length","task","_c","$RefreshReg$"],"sources":["C:/Users/Admin/crm-project/frontend/src/components/Contacts/ContactList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ContactList.css';\r\nimport axios from 'axios';\r\n\r\nconst ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentContact, setCurrentContact] = useState({\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    notes: '',\r\n    tasks: [],  // Include tasks array in contact\r\n  });\r\n  const [taskModalOpen, setTaskModalOpen] = useState(false);  // To toggle task modal\r\n  const [currentTask, setCurrentTask] = useState({\r\n    title: '',\r\n    dueDate: '',\r\n    description: '',\r\n    status: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/contacts');\r\n        setContacts(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch contacts:', error);\r\n      }\r\n    };\r\n\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentContact((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleContactSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (currentContact._id) {\r\n        const response = await axios.put(\r\n          `http://localhost:5000/api/contacts/${currentContact._id}`,\r\n          currentContact\r\n        );\r\n        setContacts((prev) =>\r\n          prev.map((contact) =>\r\n            contact._id === response.data._id ? response.data : contact\r\n          )\r\n        );\r\n      } else {\r\n        const response = await axios.post(\r\n          'http://localhost:5000/api/contacts',\r\n          currentContact\r\n        );\r\n        setContacts((prev) => [...prev, response.data]);\r\n      }\r\n      setIsEditing(false);\r\n      setCurrentContact({ name: '', phone: '', email: '', notes: '', tasks: [] });\r\n    } catch (error) {\r\n      console.error('Failed to save contact:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddContact = () => {\r\n    setCurrentContact({ name: '', phone: '', email: '', notes: '', tasks: [] });\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleContactClick = (contact) => {\r\n    setCurrentContact(contact);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleDeleteContact = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this contact?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/contacts/${id}`);\r\n        setContacts((prev) => prev.filter((contact) => contact._id !== id));\r\n      } catch (error) {\r\n        console.error('Failed to delete contact:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle adding a new task to the contact\r\n  const handleAddTask = () => {\r\n    setTaskModalOpen(true);\r\n    setCurrentTask({\r\n      title: '',\r\n      dueDate: '',\r\n      description: '',\r\n      status: '',\r\n    });\r\n  };\r\n\r\n  // Handle changes in the task form\r\n  const handleTaskChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentTask((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handle saving the new task\r\n  const handleTaskSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newTask = {\r\n        ...currentTask,\r\n        contactId: currentContact._id,  // Link task to current contact\r\n      };\r\n      const response = await axios.post('http://localhost:5000/api/tasks', newTask);\r\n      setCurrentContact((prev) => ({\r\n        ...prev,\r\n        tasks: [...prev.tasks, response.data],\r\n      }));\r\n      setTaskModalOpen(false);  // Close modal after saving task\r\n      setCurrentTask({\r\n        title: '',\r\n        dueDate: '',\r\n        description: '',\r\n        status: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to add task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-list\">\r\n      <h1>Contact List</h1>\r\n      <button onClick={handleAddContact} className=\"add-contact-button\">Add Contact</button>\r\n\r\n      {isEditing ? (\r\n        <div className=\"contact-form\">\r\n          <h2>{currentContact._id ? 'Edit Contact' : 'Add Contact'}</h2>\r\n          <form onSubmit={handleContactSubmit}>\r\n            <label>\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={currentContact.name}\r\n                onChange={handleFormChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Phone:\r\n              <input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                value={currentContact.phone}\r\n                onChange={handleFormChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Email:\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={currentContact.email}\r\n                onChange={handleFormChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Notes:\r\n              <textarea\r\n                name=\"notes\"\r\n                value={currentContact.notes}\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <button type=\"submit\">Save</button>\r\n            <button type=\"button\" onClick={() => setIsEditing(false)}>\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {contacts.length > 0 ? (\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Phone</th>\r\n                  <th>Email</th>\r\n                  <th>Notes</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {contacts.map((contact) => (\r\n                  <tr key={contact._id}>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.name}</td>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.phone}</td>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.email}</td>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.notes}</td>\r\n                    <td>\r\n                      <button onClick={() => handleDeleteContact(contact._id)}>Delete</button>\r\n                      <button onClick={handleAddTask}>Add Task</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No contacts found.</p>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Task Modal */}\r\n      {taskModalOpen && (\r\n        <div className=\"task-modal\">\r\n          <div className=\"task-modal-content\">\r\n            <h2>Add Task</h2>\r\n            <form onSubmit={handleTaskSubmit}>\r\n              <label>\r\n                Title:\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={currentTask.title}\r\n                  onChange={handleTaskChange}\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Due Date:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"dueDate\"\r\n                  value={currentTask.dueDate || ''}\r\n                  onChange={handleTaskChange}\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Description:\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={currentTask.description}\r\n                  onChange={handleTaskChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                Status:\r\n                <select\r\n                  name=\"status\"\r\n                  value={currentTask.status}\r\n                  onChange={handleTaskChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Status</option>\r\n                  <option value=\"Pending\">Pending</option>\r\n                  <option value=\"In Progress\">In Progress</option>\r\n                  <option value=\"Completed\">Completed</option>\r\n                </select>\r\n              </label>\r\n              <div className=\"task-modal-actions\">\r\n                <button type=\"submit\">Save</button>\r\n                <button type=\"button\" onClick={() => setTaskModalOpen(false)}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <div>\r\n              <h3>Tasks for {currentContact.name}</h3>\r\n              <ul>\r\n                {currentContact.tasks.length > 0 ? (\r\n                  currentContact.tasks.map((task) => (\r\n                    <li key={task._id}>\r\n                      <h4>{task.title}</h4>\r\n                      <p>{task.dueDate}</p>\r\n                      <p>{task.description}</p>\r\n                      <p>{task.status}</p>\r\n                    </li>\r\n                  ))\r\n                ) : (\r\n                  <p>No tasks added.</p>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
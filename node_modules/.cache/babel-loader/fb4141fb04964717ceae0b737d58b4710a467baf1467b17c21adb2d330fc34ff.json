{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\crm-project\\\\frontend\\\\src\\\\components\\\\Contacts\\\\ContactList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ContactList.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  var _currentContact$lastI;\n  const [contacts, setContacts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentContact, setCurrentContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    position: '',\n    notes: '',\n    type: 'lead',\n    // Default type\n    leadScore: '',\n    // Default empty\n    lastInteraction: ''\n  });\n  const [sortOption, setSortOption] = useState('name'); // Default sorting by name\n\n  // Fetch contacts from the API\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/contacts');\n        setContacts(response.data);\n      } catch (error) {\n        console.error('Failed to fetch contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, []);\n\n  // Sort contacts based on the selected option\n  const sortContacts = (contacts, criteria) => {\n    const sorted = [...contacts];\n    switch (criteria) {\n      case 'name':\n        return sorted.sort((a, b) => a.name.localeCompare(b.name));\n      case 'email':\n        return sorted.sort((a, b) => a.email.localeCompare(b.email));\n      case 'type':\n        return sorted.sort((a, b) => a.type.localeCompare(b.type));\n      case 'lastInteraction':\n        return sorted.sort((a, b) => {\n          const aDate = a.lastInteraction ? new Date(a.lastInteraction) : new Date(0); // Default to the earliest date if no interaction\n          const bDate = b.lastInteraction ? new Date(b.lastInteraction) : new Date(0); // Same as above\n          return bDate - aDate; // Sort descending (latest first)\n        });\n      case 'createdDate':\n        return sorted.sort((a, b) => new Date(a.createdDate) - new Date(b.createdDate));\n      default:\n        return sorted;\n    }\n  };\n\n  // Update sorted contacts when sortOption or contacts change\n  useEffect(() => {\n    setContacts(prevContacts => sortContacts(prevContacts, sortOption));\n  }, [sortOption]);\n\n  // Handle form input changes\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentContact(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission to add or update contact\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (currentContact._id) {\n        // Update existing contact\n        const response = await axios.put(`http://localhost:5000/api/contacts/${currentContact._id}`, currentContact);\n        setContacts(prev => prev.map(contact => contact._id === response.data._id ? response.data : contact));\n      } else {\n        // Add new contact\n        const response = await axios.post('http://localhost:5000/api/contacts', currentContact);\n        setContacts(prev => [...prev, response.data]);\n      }\n      setIsEditing(false);\n      setCurrentContact({\n        name: '',\n        email: '',\n        phone: '',\n        company: '',\n        position: '',\n        notes: '',\n        type: 'lead',\n        leadScore: '',\n        lastInteraction: ''\n      });\n    } catch (error) {\n      console.error('Failed to save contact:', error);\n    }\n  };\n\n  // Handle adding a new contact\n  const handleAddContact = () => {\n    setCurrentContact({\n      name: '',\n      email: '',\n      phone: '',\n      company: '',\n      position: '',\n      notes: '',\n      type: 'lead',\n      leadScore: '',\n      lastInteraction: ''\n    });\n    setIsEditing(true);\n  };\n\n  // Handle clicking a contact to edit\n  const handleContactClick = contact => {\n    setCurrentContact(contact);\n    setIsEditing(true);\n  };\n\n  // Handle deleting a contact\n  const handleDeleteContact = async id => {\n    if (window.confirm('Are you sure you want to delete this contact?')) {\n      try {\n        await axios.delete(`http://localhost:5000/api/contacts/${id}`);\n        setContacts(prev => prev.filter(contact => contact._id !== id));\n      } catch (error) {\n        console.error('Failed to delete contact:', error);\n      }\n    }\n  };\n\n  // Handle sorting when a column header is clicked\n  const handleSort = column => {\n    setSortOption(column);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddContact,\n      className: \"add-contact-button\",\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentContact._id ? 'Contact Details' : 'Add Contact'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: currentContact.name,\n            onChange: handleFormChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: currentContact.email,\n            onChange: handleFormChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Phone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: currentContact.phone,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Company:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"company\",\n            value: currentContact.company,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            value: currentContact.type,\n            onChange: handleFormChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lead\",\n              children: \"Lead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"contact\",\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Position:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"position\",\n            value: currentContact.position,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Notes:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"notes\",\n            value: currentContact.notes,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Lead Score:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"leadScore\",\n            value: currentContact.leadScore,\n            onChange: handleFormChange,\n            min: \"0\",\n            max: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Last Interaction:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"lastInteraction\",\n            value: (_currentContact$lastI = currentContact.lastInteraction) === null || _currentContact$lastI === void 0 ? void 0 : _currentContact$lastI.slice(0, 10) // Format the date\n            ,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setIsEditing(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: contacts.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('name'),\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('email'),\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('phone'),\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('company'),\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('type'),\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort('lastInteraction'),\n              children: \"Last Interaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleContactClick(contact),\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleContactClick(contact),\n              children: contact.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleContactClick(contact),\n              children: contact.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleContactClick(contact),\n              children: contact.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleContactClick(contact),\n              children: contact.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleContactClick(contact),\n              children: contact.lastInteraction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteContact(contact._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this)]\n          }, contact._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No contacts found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactList, \"+tgbDc90nJwEYPOYqXJA9BNLF+M=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactList","_s","_currentContact$lastI","contacts","setContacts","isEditing","setIsEditing","currentContact","setCurrentContact","name","email","phone","company","position","notes","type","leadScore","lastInteraction","sortOption","setSortOption","fetchContacts","response","get","data","error","console","sortContacts","criteria","sorted","sort","a","b","localeCompare","aDate","Date","bDate","createdDate","prevContacts","handleFormChange","e","value","target","prev","handleFormSubmit","preventDefault","_id","put","map","contact","post","handleAddContact","handleContactClick","handleDeleteContact","id","window","confirm","delete","filter","handleSort","column","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onChange","required","min","max","slice","length","_c","$RefreshReg$"],"sources":["C:/Users/Admin/crm-project/frontend/src/components/Contacts/ContactList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ContactList.css';\r\nimport axios from 'axios';\r\n\r\nconst ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentContact, setCurrentContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    company: '',\r\n    position: '',\r\n    notes: '',\r\n    type: 'lead', // Default type\r\n    leadScore: '', // Default empty\r\n    lastInteraction: '',\r\n  });\r\n  const [sortOption, setSortOption] = useState('name'); // Default sorting by name\r\n\r\n  // Fetch contacts from the API\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/contacts');\r\n        setContacts(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch contacts:', error);\r\n      }\r\n    };\r\n\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  // Sort contacts based on the selected option\r\n  const sortContacts = (contacts, criteria) => {\r\n    const sorted = [...contacts];\r\n    switch (criteria) {\r\n      case 'name':\r\n        return sorted.sort((a, b) => a.name.localeCompare(b.name));\r\n      case 'email':\r\n        return sorted.sort((a, b) => a.email.localeCompare(b.email));\r\n      case 'type':\r\n        return sorted.sort((a, b) => a.type.localeCompare(b.type));\r\n      case 'lastInteraction':\r\n        return sorted.sort((a, b) => {\r\n          const aDate = a.lastInteraction ? new Date(a.lastInteraction) : new Date(0); // Default to the earliest date if no interaction\r\n          const bDate = b.lastInteraction ? new Date(b.lastInteraction) : new Date(0); // Same as above\r\n          return bDate - aDate; // Sort descending (latest first)\r\n        });\r\n      case 'createdDate':\r\n        return sorted.sort((a, b) => new Date(a.createdDate) - new Date(b.createdDate));\r\n      default:\r\n        return sorted;\r\n    }\r\n  };\r\n\r\n  // Update sorted contacts when sortOption or contacts change\r\n  useEffect(() => {\r\n    setContacts((prevContacts) => sortContacts(prevContacts, sortOption));\r\n  }, [sortOption]);\r\n\r\n  // Handle form input changes\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentContact((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handle form submission to add or update contact\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (currentContact._id) {\r\n        // Update existing contact\r\n        const response = await axios.put(\r\n          `http://localhost:5000/api/contacts/${currentContact._id}`,\r\n          currentContact\r\n        );\r\n        setContacts((prev) =>\r\n          prev.map((contact) => (contact._id === response.data._id ? response.data : contact))\r\n        );\r\n      } else {\r\n        // Add new contact\r\n        const response = await axios.post('http://localhost:5000/api/contacts', currentContact);\r\n        setContacts((prev) => [...prev, response.data]);\r\n      }\r\n      setIsEditing(false);\r\n      setCurrentContact({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        company: '',\r\n        position: '',\r\n        notes: '',\r\n        type: 'lead',\r\n        leadScore: '',\r\n        lastInteraction: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to save contact:', error);\r\n    }\r\n  };\r\n\r\n  // Handle adding a new contact\r\n  const handleAddContact = () => {\r\n    setCurrentContact({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      company: '',\r\n      position: '',\r\n      notes: '',\r\n      type: 'lead',\r\n      leadScore: '',\r\n      lastInteraction: '',\r\n    });\r\n    setIsEditing(true);\r\n  };\r\n\r\n  // Handle clicking a contact to edit\r\n  const handleContactClick = (contact) => {\r\n    setCurrentContact(contact);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  // Handle deleting a contact\r\n  const handleDeleteContact = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this contact?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/contacts/${id}`);\r\n        setContacts((prev) => prev.filter((contact) => contact._id !== id));\r\n      } catch (error) {\r\n        console.error('Failed to delete contact:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle sorting when a column header is clicked\r\n  const handleSort = (column) => {\r\n    setSortOption(column);\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-list\">\r\n      <h1>Contact List</h1>\r\n      <button onClick={handleAddContact} className=\"add-contact-button\">Add Contact</button>\r\n\r\n      {isEditing ? (\r\n        <div className=\"contact-form\">\r\n          <h2>{currentContact._id ? 'Contact Details' : 'Add Contact'}</h2>\r\n          <form onSubmit={handleFormSubmit}>\r\n            <label>\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={currentContact.name}\r\n                onChange={handleFormChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Email:\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={currentContact.email}\r\n                onChange={handleFormChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Phone:\r\n              <input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                value={currentContact.phone}\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Company:\r\n              <input\r\n                type=\"text\"\r\n                name=\"company\"\r\n                value={currentContact.company}\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Type:\r\n              <select\r\n                name=\"type\"\r\n                value={currentContact.type}\r\n                onChange={handleFormChange}\r\n                required\r\n              >\r\n                <option value=\"lead\">Lead</option>\r\n                <option value=\"contact\">Contact</option>\r\n              </select>\r\n            </label>\r\n            <label>\r\n              Position:\r\n              <input\r\n                type=\"text\"\r\n                name=\"position\"\r\n                value={currentContact.position}\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Notes:\r\n              <textarea\r\n                name=\"notes\"\r\n                value={currentContact.notes}\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Lead Score:\r\n              <input\r\n                type=\"number\"\r\n                name=\"leadScore\"\r\n                value={currentContact.leadScore}\r\n                onChange={handleFormChange}\r\n                min=\"0\"\r\n                max=\"100\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Last Interaction:\r\n              <input\r\n                type=\"date\"\r\n                name=\"lastInteraction\"\r\n                value={currentContact.lastInteraction?.slice(0, 10)} // Format the date\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <button type=\"submit\">Save</button>\r\n            <button type=\"button\" onClick={() => setIsEditing(false)}>Cancel</button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {contacts.length > 0 ? (\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th onClick={() => handleSort('name')}>Name</th>\r\n                  <th onClick={() => handleSort('email')}>Email</th>\r\n                  <th onClick={() => handleSort('phone')}>Phone</th>\r\n                  <th onClick={() => handleSort('company')}>Company</th>\r\n                  <th onClick={() => handleSort('type')}>Type</th>\r\n                  <th onClick={() => handleSort('lastInteraction')}>Last Interaction</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {contacts.map((contact) => (\r\n                  <tr key={contact._id}>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.name}</td>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.email}</td>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.phone}</td>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.company}</td>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.type}</td>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.lastInteraction}</td>\r\n                    <td>\r\n                      <button onClick={() => handleDeleteContact(contact._id)}>Delete</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No contacts found.</p>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
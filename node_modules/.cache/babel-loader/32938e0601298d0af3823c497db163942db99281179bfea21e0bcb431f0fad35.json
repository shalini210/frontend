{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./ContactList.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ContactList=()=>{var _currentContact$lastI;const[contacts,setContacts]=useState([]);const[filteredContacts,setFilteredContacts]=useState([]);// For storing filtered contacts\nconst[isEditing,setIsEditing]=useState(false);const[currentContact,setCurrentContact]=useState({name:'',email:'',phone:'',company:'',position:'',notes:'',type:'lead',// Default type\nleadScore:'',// Default empty\nlastInteraction:''});const[sortOption,setSortOption]=useState('name');// Default sorting by name\nconst[searchTerm,setSearchTerm]=useState('');// For storing the search term\n// Fetch contacts from the API\nuseEffect(()=>{const fetchContacts=async()=>{try{const response=await axios.get('http://localhost:5000/api/contacts');setContacts(response.data);setFilteredContacts(response.data);// Initially set the filtered contacts to all contacts\n}catch(error){console.error('Failed to fetch contacts:',error);}};fetchContacts();},[]);// Sort contacts based on the selected option\nconst sortContacts=(contacts,criteria)=>{const sorted=[...contacts];switch(criteria){case'name':return sorted.sort((a,b)=>a.name.localeCompare(b.name));case'email':return sorted.sort((a,b)=>a.email.localeCompare(b.email));case'type':return sorted.sort((a,b)=>a.type.localeCompare(b.type));case'company':return sorted.sort((a,b)=>a.company.localeCompare(b.company));// Sort by company\ndefault:return sorted;}};// Update sorted contacts when sortOption or contacts change\nuseEffect(()=>{setFilteredContacts(prevContacts=>sortContacts(prevContacts,sortOption));},[sortOption]);// Filter contacts based on the search term\nuseEffect(()=>{const searchContacts=()=>{const lowercasedSearchTerm=searchTerm.toLowerCase();const filtered=contacts.filter(contact=>contact.name.toLowerCase().includes(lowercasedSearchTerm)||contact.email.toLowerCase().includes(lowercasedSearchTerm)||contact.company.toLowerCase().includes(lowercasedSearchTerm));setFilteredContacts(filtered);};searchContacts();},[searchTerm,contacts]);// Re-run filtering when searchTerm or contacts change\n// Handle form input changes\nconst handleFormChange=e=>{const{name,value}=e.target;setCurrentContact(prev=>({...prev,[name]:value}));};// Handle form submission to add or update contact\nconst handleFormSubmit=async e=>{e.preventDefault();try{if(currentContact._id){// Update existing contact\nconst response=await axios.put(`http://localhost:5000/api/contacts/${currentContact._id}`,currentContact);setContacts(prev=>prev.map(contact=>contact._id===response.data._id?response.data:contact));setFilteredContacts(prev=>prev.map(contact=>contact._id===response.data._id?response.data:contact));}else{// Add new contact\nconst response=await axios.post('http://localhost:5000/api/contacts',currentContact);setContacts(prev=>[...prev,response.data]);setFilteredContacts(prev=>[...prev,response.data]);}setIsEditing(false);setCurrentContact({name:'',email:'',phone:'',company:'',position:'',notes:'',type:'lead',leadScore:'',lastInteraction:''});}catch(error){console.error('Failed to save contact:',error);}};// Handle adding a new contact\nconst handleAddContact=()=>{setCurrentContact({name:'',email:'',phone:'',company:'',position:'',notes:'',type:'lead',leadScore:'',lastInteraction:''});setIsEditing(true);};// Handle clicking a contact to edit\nconst handleContactClick=contact=>{setCurrentContact(contact);setIsEditing(true);};// Handle deleting a contact\nconst handleDeleteContact=async id=>{if(window.confirm('Are you sure you want to delete this contact?')){try{await axios.delete(`http://localhost:5000/api/contacts/${id}`);setContacts(prev=>prev.filter(contact=>contact._id!==id));setFilteredContacts(prev=>prev.filter(contact=>contact._id!==id));}catch(error){console.error('Failed to delete contact:',error);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"contact-list\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Contact List\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddContact,className:\"add-contact-button\",children:\"Add Contact\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-sort-container\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"search\",children:\"Search Contacts:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"search\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),placeholder:\"Search...\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sort\",children:\"Sort by:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"sort\",value:sortOption,onChange:e=>setSortOption(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"option\",{value:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"option\",{value:\"type\",children:\"Type\"}),/*#__PURE__*/_jsx(\"option\",{value:\"company\",children:\"Company\"}),\" \"]})]})]}),isEditing?/*#__PURE__*/_jsxs(\"div\",{className:\"contact-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:currentContact._id?'Contact Details':'Add Contact'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:currentContact.name,onChange:handleFormChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Email:\",/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:currentContact.email,onChange:handleFormChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Phone:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"phone\",value:currentContact.phone,onChange:handleFormChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Company:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"company\",value:currentContact.company,onChange:handleFormChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Type:\",/*#__PURE__*/_jsxs(\"select\",{name:\"type\",value:currentContact.type,onChange:handleFormChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"lead\",children:\"Lead\"}),/*#__PURE__*/_jsx(\"option\",{value:\"contact\",children:\"Contact\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Position:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"position\",value:currentContact.position,onChange:handleFormChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Notes:\",/*#__PURE__*/_jsx(\"textarea\",{name:\"notes\",value:currentContact.notes,onChange:handleFormChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Lead Score:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"leadScore\",value:currentContact.leadScore,onChange:handleFormChange,min:\"0\",max:\"100\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Last Interaction:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"lastInteraction\",value:(_currentContact$lastI=currentContact.lastInteraction)===null||_currentContact$lastI===void 0?void 0:_currentContact$lastI.slice(0,10)// Format the date\n,onChange:handleFormChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setIsEditing(false),children:\"Cancel\"})]})]}):/*#__PURE__*/_jsx(_Fragment,{children:filteredContacts.length>0?/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Phone\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Company\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredContacts.map(contact=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{onClick:()=>handleContactClick(contact),children:contact.name}),/*#__PURE__*/_jsx(\"td\",{onClick:()=>handleContactClick(contact),children:/*#__PURE__*/_jsx(\"a\",{href:`mailto:${contact.email}`,children:contact.email})}),/*#__PURE__*/_jsx(\"td\",{onClick:()=>handleContactClick(contact),children:contact.phone}),/*#__PURE__*/_jsx(\"td\",{onClick:()=>handleContactClick(contact),children:contact.company}),/*#__PURE__*/_jsx(\"td\",{onClick:()=>handleContactClick(contact),children:contact.type}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteContact(contact._id),children:\"Delete\"})})]},contact._id))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No contacts found.\"})})]});};export default ContactList;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ContactList","_currentContact$lastI","contacts","setContacts","filteredContacts","setFilteredContacts","isEditing","setIsEditing","currentContact","setCurrentContact","name","email","phone","company","position","notes","type","leadScore","lastInteraction","sortOption","setSortOption","searchTerm","setSearchTerm","fetchContacts","response","get","data","error","console","sortContacts","criteria","sorted","sort","a","b","localeCompare","prevContacts","searchContacts","lowercasedSearchTerm","toLowerCase","filtered","filter","contact","includes","handleFormChange","e","value","target","prev","handleFormSubmit","preventDefault","_id","put","map","post","handleAddContact","handleContactClick","handleDeleteContact","id","window","confirm","delete","className","children","onClick","htmlFor","onChange","placeholder","onSubmit","required","min","max","slice","length","href"],"sources":["C:/Users/Admin/crm-project/frontend/src/components/Contacts/ContactList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ContactList.css';\r\nimport axios from 'axios';\r\n\r\nconst ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filteredContacts, setFilteredContacts] = useState([]); // For storing filtered contacts\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentContact, setCurrentContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    company: '',\r\n    position: '',\r\n    notes: '',\r\n    type: 'lead', // Default type\r\n    leadScore: '', // Default empty\r\n    lastInteraction: '',\r\n  });\r\n  const [sortOption, setSortOption] = useState('name'); // Default sorting by name\r\n  const [searchTerm, setSearchTerm] = useState(''); // For storing the search term\r\n\r\n  // Fetch contacts from the API\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/contacts');\r\n        setContacts(response.data);\r\n        setFilteredContacts(response.data); // Initially set the filtered contacts to all contacts\r\n      } catch (error) {\r\n        console.error('Failed to fetch contacts:', error);\r\n      }\r\n    };\r\n\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  // Sort contacts based on the selected option\r\n  const sortContacts = (contacts, criteria) => {\r\n    const sorted = [...contacts];\r\n    switch (criteria) {\r\n      case 'name':\r\n        return sorted.sort((a, b) => a.name.localeCompare(b.name));\r\n      case 'email':\r\n        return sorted.sort((a, b) => a.email.localeCompare(b.email));\r\n      case 'type':\r\n        return sorted.sort((a, b) => a.type.localeCompare(b.type));\r\n      case 'company':\r\n        return sorted.sort((a, b) => a.company.localeCompare(b.company)); // Sort by company\r\n      default:\r\n        return sorted;\r\n    }\r\n  };\r\n\r\n  // Update sorted contacts when sortOption or contacts change\r\n  useEffect(() => {\r\n    setFilteredContacts((prevContacts) => sortContacts(prevContacts, sortOption));\r\n  }, [sortOption]);\r\n\r\n  // Filter contacts based on the search term\r\n  useEffect(() => {\r\n    const searchContacts = () => {\r\n      const lowercasedSearchTerm = searchTerm.toLowerCase();\r\n      const filtered = contacts.filter(\r\n        (contact) =>\r\n          contact.name.toLowerCase().includes(lowercasedSearchTerm) ||\r\n          contact.email.toLowerCase().includes(lowercasedSearchTerm) ||\r\n          contact.company.toLowerCase().includes(lowercasedSearchTerm)\r\n      );\r\n      setFilteredContacts(filtered);\r\n    };\r\n\r\n    searchContacts();\r\n  }, [searchTerm, contacts]); // Re-run filtering when searchTerm or contacts change\r\n\r\n  // Handle form input changes\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentContact((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handle form submission to add or update contact\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (currentContact._id) {\r\n        // Update existing contact\r\n        const response = await axios.put(\r\n          `http://localhost:5000/api/contacts/${currentContact._id}`,\r\n          currentContact\r\n        );\r\n        setContacts((prev) =>\r\n          prev.map((contact) => (contact._id === response.data._id ? response.data : contact))\r\n        );\r\n        setFilteredContacts((prev) =>\r\n          prev.map((contact) => (contact._id === response.data._id ? response.data : contact))\r\n        );\r\n      } else {\r\n        // Add new contact\r\n        const response = await axios.post('http://localhost:5000/api/contacts', currentContact);\r\n        setContacts((prev) => [...prev, response.data]);\r\n        setFilteredContacts((prev) => [...prev, response.data]);\r\n      }\r\n      setIsEditing(false);\r\n      setCurrentContact({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        company: '',\r\n        position: '',\r\n        notes: '',\r\n        type: 'lead',\r\n        leadScore: '',\r\n        lastInteraction: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to save contact:', error);\r\n    }\r\n  };\r\n\r\n  // Handle adding a new contact\r\n  const handleAddContact = () => {\r\n    setCurrentContact({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      company: '',\r\n      position: '',\r\n      notes: '',\r\n      type: 'lead',\r\n      leadScore: '',\r\n      lastInteraction: '',\r\n    });\r\n    setIsEditing(true);\r\n  };\r\n\r\n  // Handle clicking a contact to edit\r\n  const handleContactClick = (contact) => {\r\n    setCurrentContact(contact);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  // Handle deleting a contact\r\n  const handleDeleteContact = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this contact?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/contacts/${id}`);\r\n        setContacts((prev) => prev.filter((contact) => contact._id !== id));\r\n        setFilteredContacts((prev) => prev.filter((contact) => contact._id !== id));\r\n      } catch (error) {\r\n        console.error('Failed to delete contact:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-list\">\r\n      <h1>Contact List</h1>\r\n      <button onClick={handleAddContact} className=\"add-contact-button\">Add Contact</button>\r\n\r\n      {/* Search Bar */}\r\n      <div className=\"search-sort-container\">\r\n        <div>\r\n          <label htmlFor=\"search\">Search Contacts:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"search\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            placeholder=\"Search...\"\r\n          />\r\n        </div>\r\n\r\n        {/* Sorting Options */}\r\n        <div>\r\n          <label htmlFor=\"sort\">Sort by:</label>\r\n          <select\r\n            id=\"sort\"\r\n            value={sortOption}\r\n            onChange={(e) => setSortOption(e.target.value)}\r\n          >\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"email\">Email</option>\r\n            <option value=\"type\">Type</option>\r\n            <option value=\"company\">Company</option> {/* Add company to the sort options */}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {isEditing ? (\r\n        <div className=\"contact-form\">\r\n          <h2>{currentContact._id ? 'Contact Details' : 'Add Contact'}</h2>\r\n          <form onSubmit={handleFormSubmit}>\r\n            <label>\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={currentContact.name}\r\n                onChange={handleFormChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Email:\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={currentContact.email}\r\n                onChange={handleFormChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Phone:\r\n              <input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                value={currentContact.phone}\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Company:\r\n              <input\r\n                type=\"text\"\r\n                name=\"company\"\r\n                value={currentContact.company}\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Type:\r\n              <select\r\n                name=\"type\"\r\n                value={currentContact.type}\r\n                onChange={handleFormChange}\r\n                required\r\n              >\r\n                <option value=\"lead\">Lead</option>\r\n                <option value=\"contact\">Contact</option>\r\n              </select>\r\n            </label>\r\n            <label>\r\n              Position:\r\n              <input\r\n                type=\"text\"\r\n                name=\"position\"\r\n                value={currentContact.position}\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Notes:\r\n              <textarea\r\n                name=\"notes\"\r\n                value={currentContact.notes}\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Lead Score:\r\n              <input\r\n                type=\"number\"\r\n                name=\"leadScore\"\r\n                value={currentContact.leadScore}\r\n                onChange={handleFormChange}\r\n                min=\"0\"\r\n                max=\"100\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Last Interaction:\r\n              <input\r\n                type=\"date\"\r\n                name=\"lastInteraction\"\r\n                value={currentContact.lastInteraction?.slice(0, 10)} // Format the date\r\n                onChange={handleFormChange}\r\n              />\r\n            </label>\r\n            <button type=\"submit\">Save</button>\r\n            <button type=\"button\" onClick={() => setIsEditing(false)}>Cancel</button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {filteredContacts.length > 0 ? (\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Phone</th>\r\n                  <th>Company</th>\r\n                  <th>Type</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredContacts.map((contact) => (\r\n                  <tr key={contact._id}>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.name}</td>\r\n                    \r\n                    {/* Make email clickable */}\r\n                    <td onClick={() => handleContactClick(contact)}>\r\n                      <a href={`mailto:${contact.email}`}>{contact.email}</a>\r\n                    </td>\r\n                    \r\n                    <td onClick={() => handleContactClick(contact)}>{contact.phone}</td>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.company}</td>\r\n                    <td onClick={() => handleContactClick(contact)}>{contact.type}</td>\r\n                    <td>\r\n                      <button onClick={() => handleDeleteContact(contact._id)}>Delete</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No contacts found.</p>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,mBAAmB,CAC1B,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1B,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CACxB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACa,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9D,KAAM,CAACe,SAAS,CAAEC,YAAY,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACiB,cAAc,CAAEC,iBAAiB,CAAC,CAAGlB,QAAQ,CAAC,CACnDmB,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EAAE,CACXC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACTC,IAAI,CAAE,MAAM,CAAE;AACdC,SAAS,CAAE,EAAE,CAAE;AACfC,eAAe,CAAE,EACnB,CAAC,CAAC,CACF,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAG7B,QAAQ,CAAC,MAAM,CAAC,CAAE;AACtD,KAAM,CAAC8B,UAAU,CAAEC,aAAa,CAAC,CAAG/B,QAAQ,CAAC,EAAE,CAAC,CAAE;AAElD;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAA+B,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA/B,KAAK,CAACgC,GAAG,CAAC,oCAAoC,CAAC,CACtEtB,WAAW,CAACqB,QAAQ,CAACE,IAAI,CAAC,CAC1BrB,mBAAmB,CAACmB,QAAQ,CAACE,IAAI,CAAC,CAAE;AACtC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,CAEDJ,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAM,YAAY,CAAGA,CAAC3B,QAAQ,CAAE4B,QAAQ,GAAK,CAC3C,KAAM,CAAAC,MAAM,CAAG,CAAC,GAAG7B,QAAQ,CAAC,CAC5B,OAAQ4B,QAAQ,EACd,IAAK,MAAM,CACT,MAAO,CAAAC,MAAM,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACvB,IAAI,CAACyB,aAAa,CAACD,CAAC,CAACxB,IAAI,CAAC,CAAC,CAC5D,IAAK,OAAO,CACV,MAAO,CAAAqB,MAAM,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACtB,KAAK,CAACwB,aAAa,CAACD,CAAC,CAACvB,KAAK,CAAC,CAAC,CAC9D,IAAK,MAAM,CACT,MAAO,CAAAoB,MAAM,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACjB,IAAI,CAACmB,aAAa,CAACD,CAAC,CAAClB,IAAI,CAAC,CAAC,CAC5D,IAAK,SAAS,CACZ,MAAO,CAAAe,MAAM,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACpB,OAAO,CAACsB,aAAa,CAACD,CAAC,CAACrB,OAAO,CAAC,CAAC,CAAE;AACpE,QACE,MAAO,CAAAkB,MAAM,CACjB,CACF,CAAC,CAED;AACAvC,SAAS,CAAC,IAAM,CACda,mBAAmB,CAAE+B,YAAY,EAAKP,YAAY,CAACO,YAAY,CAAEjB,UAAU,CAAC,CAAC,CAC/E,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhB;AACA3B,SAAS,CAAC,IAAM,CACd,KAAM,CAAA6C,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,oBAAoB,CAAGjB,UAAU,CAACkB,WAAW,CAAC,CAAC,CACrD,KAAM,CAAAC,QAAQ,CAAGtC,QAAQ,CAACuC,MAAM,CAC7BC,OAAO,EACNA,OAAO,CAAChC,IAAI,CAAC6B,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,oBAAoB,CAAC,EACzDI,OAAO,CAAC/B,KAAK,CAAC4B,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,oBAAoB,CAAC,EAC1DI,OAAO,CAAC7B,OAAO,CAAC0B,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,oBAAoB,CAC/D,CAAC,CACDjC,mBAAmB,CAACmC,QAAQ,CAAC,CAC/B,CAAC,CAEDH,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAAChB,UAAU,CAAEnB,QAAQ,CAAC,CAAC,CAAE;AAE5B;AACA,KAAM,CAAA0C,gBAAgB,CAAIC,CAAC,EAAK,CAC9B,KAAM,CAAEnC,IAAI,CAAEoC,KAAM,CAAC,CAAGD,CAAC,CAACE,MAAM,CAChCtC,iBAAiB,CAAEuC,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAE,CAACtC,IAAI,EAAGoC,KAAM,CAAC,CAAC,CAAC,CAC3D,CAAC,CAED;AACA,KAAM,CAAAG,gBAAgB,CAAG,KAAO,CAAAJ,CAAC,EAAK,CACpCA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,GAAI1C,cAAc,CAAC2C,GAAG,CAAE,CACtB;AACA,KAAM,CAAA3B,QAAQ,CAAG,KAAM,CAAA/B,KAAK,CAAC2D,GAAG,CAC9B,sCAAsC5C,cAAc,CAAC2C,GAAG,EAAE,CAC1D3C,cACF,CAAC,CACDL,WAAW,CAAE6C,IAAI,EACfA,IAAI,CAACK,GAAG,CAAEX,OAAO,EAAMA,OAAO,CAACS,GAAG,GAAK3B,QAAQ,CAACE,IAAI,CAACyB,GAAG,CAAG3B,QAAQ,CAACE,IAAI,CAAGgB,OAAQ,CACrF,CAAC,CACDrC,mBAAmB,CAAE2C,IAAI,EACvBA,IAAI,CAACK,GAAG,CAAEX,OAAO,EAAMA,OAAO,CAACS,GAAG,GAAK3B,QAAQ,CAACE,IAAI,CAACyB,GAAG,CAAG3B,QAAQ,CAACE,IAAI,CAAGgB,OAAQ,CACrF,CAAC,CACH,CAAC,IAAM,CACL;AACA,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAA/B,KAAK,CAAC6D,IAAI,CAAC,oCAAoC,CAAE9C,cAAc,CAAC,CACvFL,WAAW,CAAE6C,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAExB,QAAQ,CAACE,IAAI,CAAC,CAAC,CAC/CrB,mBAAmB,CAAE2C,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAExB,QAAQ,CAACE,IAAI,CAAC,CAAC,CACzD,CACAnB,YAAY,CAAC,KAAK,CAAC,CACnBE,iBAAiB,CAAC,CAChBC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EAAE,CACXC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACTC,IAAI,CAAE,MAAM,CACZC,SAAS,CAAE,EAAE,CACbC,eAAe,CAAE,EACnB,CAAC,CAAC,CACJ,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CACF,CAAC,CAED;AACA,KAAM,CAAA4B,gBAAgB,CAAGA,CAAA,GAAM,CAC7B9C,iBAAiB,CAAC,CAChBC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EAAE,CACXC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACTC,IAAI,CAAE,MAAM,CACZC,SAAS,CAAE,EAAE,CACbC,eAAe,CAAE,EACnB,CAAC,CAAC,CACFX,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED;AACA,KAAM,CAAAiD,kBAAkB,CAAId,OAAO,EAAK,CACtCjC,iBAAiB,CAACiC,OAAO,CAAC,CAC1BnC,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED;AACA,KAAM,CAAAkD,mBAAmB,CAAG,KAAO,CAAAC,EAAE,EAAK,CACxC,GAAIC,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC,CAAE,CACnE,GAAI,CACF,KAAM,CAAAnE,KAAK,CAACoE,MAAM,CAAC,sCAAsCH,EAAE,EAAE,CAAC,CAC9DvD,WAAW,CAAE6C,IAAI,EAAKA,IAAI,CAACP,MAAM,CAAEC,OAAO,EAAKA,OAAO,CAACS,GAAG,GAAKO,EAAE,CAAC,CAAC,CACnErD,mBAAmB,CAAE2C,IAAI,EAAKA,IAAI,CAACP,MAAM,CAAEC,OAAO,EAAKA,OAAO,CAACS,GAAG,GAAKO,EAAE,CAAC,CAAC,CAC7E,CAAE,MAAO/B,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CACF,CAAC,CAED,mBACE9B,KAAA,QAAKiE,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpE,IAAA,OAAAoE,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBpE,IAAA,WAAQqE,OAAO,CAAET,gBAAiB,CAACO,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,aAAW,CAAQ,CAAC,cAGtFlE,KAAA,QAAKiE,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpClE,KAAA,QAAAkE,QAAA,eACEpE,IAAA,UAAOsE,OAAO,CAAC,QAAQ,CAAAF,QAAA,CAAC,kBAAgB,CAAO,CAAC,cAChDpE,IAAA,UACEqB,IAAI,CAAC,MAAM,CACX0C,EAAE,CAAC,QAAQ,CACXZ,KAAK,CAAEzB,UAAW,CAClB6C,QAAQ,CAAGrB,CAAC,EAAKvB,aAAa,CAACuB,CAAC,CAACE,MAAM,CAACD,KAAK,CAAE,CAC/CqB,WAAW,CAAC,WAAW,CACxB,CAAC,EACC,CAAC,cAGNtE,KAAA,QAAAkE,QAAA,eACEpE,IAAA,UAAOsE,OAAO,CAAC,MAAM,CAAAF,QAAA,CAAC,UAAQ,CAAO,CAAC,cACtClE,KAAA,WACE6D,EAAE,CAAC,MAAM,CACTZ,KAAK,CAAE3B,UAAW,CAClB+C,QAAQ,CAAGrB,CAAC,EAAKzB,aAAa,CAACyB,CAAC,CAACE,MAAM,CAACD,KAAK,CAAE,CAAAiB,QAAA,eAE/CpE,IAAA,WAAQmD,KAAK,CAAC,MAAM,CAAAiB,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClCpE,IAAA,WAAQmD,KAAK,CAAC,OAAO,CAAAiB,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpCpE,IAAA,WAAQmD,KAAK,CAAC,MAAM,CAAAiB,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClCpE,IAAA,WAAQmD,KAAK,CAAC,SAAS,CAAAiB,QAAA,CAAC,SAAO,CAAQ,CAAC,IAAC,EACnC,CAAC,EACN,CAAC,EACH,CAAC,CAELzD,SAAS,cACRT,KAAA,QAAKiE,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpE,IAAA,OAAAoE,QAAA,CAAKvD,cAAc,CAAC2C,GAAG,CAAG,iBAAiB,CAAG,aAAa,CAAK,CAAC,cACjEtD,KAAA,SAAMuE,QAAQ,CAAEnB,gBAAiB,CAAAc,QAAA,eAC/BlE,KAAA,UAAAkE,QAAA,EAAO,OAEL,cAAApE,IAAA,UACEqB,IAAI,CAAC,MAAM,CACXN,IAAI,CAAC,MAAM,CACXoC,KAAK,CAAEtC,cAAc,CAACE,IAAK,CAC3BwD,QAAQ,CAAEtB,gBAAiB,CAC3ByB,QAAQ,MACT,CAAC,EACG,CAAC,cACRxE,KAAA,UAAAkE,QAAA,EAAO,QAEL,cAAApE,IAAA,UACEqB,IAAI,CAAC,OAAO,CACZN,IAAI,CAAC,OAAO,CACZoC,KAAK,CAAEtC,cAAc,CAACG,KAAM,CAC5BuD,QAAQ,CAAEtB,gBAAiB,CAC3ByB,QAAQ,MACT,CAAC,EACG,CAAC,cACRxE,KAAA,UAAAkE,QAAA,EAAO,QAEL,cAAApE,IAAA,UACEqB,IAAI,CAAC,MAAM,CACXN,IAAI,CAAC,OAAO,CACZoC,KAAK,CAAEtC,cAAc,CAACI,KAAM,CAC5BsD,QAAQ,CAAEtB,gBAAiB,CAC5B,CAAC,EACG,CAAC,cACR/C,KAAA,UAAAkE,QAAA,EAAO,UAEL,cAAApE,IAAA,UACEqB,IAAI,CAAC,MAAM,CACXN,IAAI,CAAC,SAAS,CACdoC,KAAK,CAAEtC,cAAc,CAACK,OAAQ,CAC9BqD,QAAQ,CAAEtB,gBAAiB,CAC5B,CAAC,EACG,CAAC,cACR/C,KAAA,UAAAkE,QAAA,EAAO,OAEL,cAAAlE,KAAA,WACEa,IAAI,CAAC,MAAM,CACXoC,KAAK,CAAEtC,cAAc,CAACQ,IAAK,CAC3BkD,QAAQ,CAAEtB,gBAAiB,CAC3ByB,QAAQ,MAAAN,QAAA,eAERpE,IAAA,WAAQmD,KAAK,CAAC,MAAM,CAAAiB,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClCpE,IAAA,WAAQmD,KAAK,CAAC,SAAS,CAAAiB,QAAA,CAAC,SAAO,CAAQ,CAAC,EAClC,CAAC,EACJ,CAAC,cACRlE,KAAA,UAAAkE,QAAA,EAAO,WAEL,cAAApE,IAAA,UACEqB,IAAI,CAAC,MAAM,CACXN,IAAI,CAAC,UAAU,CACfoC,KAAK,CAAEtC,cAAc,CAACM,QAAS,CAC/BoD,QAAQ,CAAEtB,gBAAiB,CAC5B,CAAC,EACG,CAAC,cACR/C,KAAA,UAAAkE,QAAA,EAAO,QAEL,cAAApE,IAAA,aACEe,IAAI,CAAC,OAAO,CACZoC,KAAK,CAAEtC,cAAc,CAACO,KAAM,CAC5BmD,QAAQ,CAAEtB,gBAAiB,CAC5B,CAAC,EACG,CAAC,cACR/C,KAAA,UAAAkE,QAAA,EAAO,aAEL,cAAApE,IAAA,UACEqB,IAAI,CAAC,QAAQ,CACbN,IAAI,CAAC,WAAW,CAChBoC,KAAK,CAAEtC,cAAc,CAACS,SAAU,CAChCiD,QAAQ,CAAEtB,gBAAiB,CAC3B0B,GAAG,CAAC,GAAG,CACPC,GAAG,CAAC,KAAK,CACV,CAAC,EACG,CAAC,cACR1E,KAAA,UAAAkE,QAAA,EAAO,mBAEL,cAAApE,IAAA,UACEqB,IAAI,CAAC,MAAM,CACXN,IAAI,CAAC,iBAAiB,CACtBoC,KAAK,EAAA7C,qBAAA,CAAEO,cAAc,CAACU,eAAe,UAAAjB,qBAAA,iBAA9BA,qBAAA,CAAgCuE,KAAK,CAAC,CAAC,CAAE,EAAE,CAAG;AAAA,CACrDN,QAAQ,CAAEtB,gBAAiB,CAC5B,CAAC,EACG,CAAC,cACRjD,IAAA,WAAQqB,IAAI,CAAC,QAAQ,CAAA+C,QAAA,CAAC,MAAI,CAAQ,CAAC,cACnCpE,IAAA,WAAQqB,IAAI,CAAC,QAAQ,CAACgD,OAAO,CAAEA,CAAA,GAAMzD,YAAY,CAAC,KAAK,CAAE,CAAAwD,QAAA,CAAC,QAAM,CAAQ,CAAC,EACrE,CAAC,EACJ,CAAC,cAENpE,IAAA,CAAAI,SAAA,EAAAgE,QAAA,CACG3D,gBAAgB,CAACqE,MAAM,CAAG,CAAC,cAC1B5E,KAAA,UAAAkE,QAAA,eACEpE,IAAA,UAAAoE,QAAA,cACElE,KAAA,OAAAkE,QAAA,eACEpE,IAAA,OAAAoE,QAAA,CAAI,MAAI,CAAI,CAAC,cACbpE,IAAA,OAAAoE,QAAA,CAAI,OAAK,CAAI,CAAC,cACdpE,IAAA,OAAAoE,QAAA,CAAI,OAAK,CAAI,CAAC,cACdpE,IAAA,OAAAoE,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBpE,IAAA,OAAAoE,QAAA,CAAI,MAAI,CAAI,CAAC,cACbpE,IAAA,OAAAoE,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACRpE,IAAA,UAAAoE,QAAA,CACG3D,gBAAgB,CAACiD,GAAG,CAAEX,OAAO,eAC5B7C,KAAA,OAAAkE,QAAA,eACEpE,IAAA,OAAIqE,OAAO,CAAEA,CAAA,GAAMR,kBAAkB,CAACd,OAAO,CAAE,CAAAqB,QAAA,CAAErB,OAAO,CAAChC,IAAI,CAAK,CAAC,cAGnEf,IAAA,OAAIqE,OAAO,CAAEA,CAAA,GAAMR,kBAAkB,CAACd,OAAO,CAAE,CAAAqB,QAAA,cAC7CpE,IAAA,MAAG+E,IAAI,CAAE,UAAUhC,OAAO,CAAC/B,KAAK,EAAG,CAAAoD,QAAA,CAAErB,OAAO,CAAC/B,KAAK,CAAI,CAAC,CACrD,CAAC,cAELhB,IAAA,OAAIqE,OAAO,CAAEA,CAAA,GAAMR,kBAAkB,CAACd,OAAO,CAAE,CAAAqB,QAAA,CAAErB,OAAO,CAAC9B,KAAK,CAAK,CAAC,cACpEjB,IAAA,OAAIqE,OAAO,CAAEA,CAAA,GAAMR,kBAAkB,CAACd,OAAO,CAAE,CAAAqB,QAAA,CAAErB,OAAO,CAAC7B,OAAO,CAAK,CAAC,cACtElB,IAAA,OAAIqE,OAAO,CAAEA,CAAA,GAAMR,kBAAkB,CAACd,OAAO,CAAE,CAAAqB,QAAA,CAAErB,OAAO,CAAC1B,IAAI,CAAK,CAAC,cACnErB,IAAA,OAAAoE,QAAA,cACEpE,IAAA,WAAQqE,OAAO,CAAEA,CAAA,GAAMP,mBAAmB,CAACf,OAAO,CAACS,GAAG,CAAE,CAAAY,QAAA,CAAC,QAAM,CAAQ,CAAC,CACtE,CAAC,GAbErB,OAAO,CAACS,GAcb,CACL,CAAC,CACG,CAAC,EACH,CAAC,cAERxD,IAAA,MAAAoE,QAAA,CAAG,oBAAkB,CAAG,CACzB,CACD,CACH,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA/D,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}